@using scfs_erp.Models;


@model scfs_erp.Models.GateOutDetail


@{
    ViewBag.Title = "Cargo Out Detail";
}

<style>
    .frm_hide {
        display: none;
    }
</style>

<section id="main-content">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header">
                        <div class="box-name">
                            <i class="glyphicon glyphicon-import"></i>
                            <strong>Cargo Out</strong>
                        </div>
                    </div>

                    <div class="box-content" data-ng-app="myModule">
                        <form action="@Url.Content("~/ImportCargoOut/savedata")" method="post" accept-charset="utf-8" id="ImportCargoOutfrm" data-ng-controller="myController" name="ImportCargoOutfrm" onsubmit="return Validate()">


                            @Html.ValidationSummary(true)

                            <fieldset id="GateOutDetailform_info">

                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Primary  </label>
                                                @Html.TextBoxFor(model => model.GODID, new { @class = "form-control  GODID", @id = "GODID" })
                                                @Html.TextBoxFor(model => model.GODNO, new { @class = "form-control  GODNO", @id = "GODNO" })
                                            </div>
                                        </div>

                                        <div class="col-md-1">
                                            <div class="form-group">
                                                <label>No </label>
                                                @Html.TextBoxFor(model => Model.GONO, new { @class = "form-control GONO ", @id = "GONO", @data_val = false, @readonly = "readonly" })
                                            </div>
                                        </div>

                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Date </label>
                                                @Html.TextBoxFor(model => Model.GODATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker GODATE ", @id = "GODATE", @data_val = false, tabindex = "1" })
                                            </div>
                                        </div>

                                        <div class="col-md-1">
                                            <div class="form-group">
                                                <label>Time </label>
                                                @Html.TextBoxFor(model => Model.GOTIME, new { @class = "form-control datetime GOTIME ", @id = "GOTIME", @data_val = false, tabindex = "2" })
                                            </div>
                                        </div>

                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Container No <span class="required-field"></span></label>
                                                @Html.DropDownList("GIDID", null, "---Select Container No---", new { @class = "form-control GIDID", @id = "GIDID", tabindex = "2" })

                                            </div>
                                        </div>

                                        <div class="col-md-1">
                                            <div class="form-group">
                                                <label>Size</label>
                                                <input type="text" value="@ViewBag.SIZE" id="SIZE" class=" form-control SIZE" name="SIZE" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>In Date </label>
                                                <input type="text" value="@ViewBag.GIDATE" id="GIDATE" class=" form-control GIDATE" name="GIDATE" readonly />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Cargo</label>
                                                <input type="text" value="@ViewBag.PRDTDESC" id="PRDTDESC" class=" form-control PRDTDESC" name="PRDTDESC" readonly />
                                                <input type="text" value="@ViewBag.PRDTGDESC" id="PRDTGDESC" class=" form-control PRDTGDESC hide" name="PRDTGDESC" readonly />

                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12">            
                                       
                                        
                                       
                                        
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Quantity</label>
                                                <input type="text" value="@ViewBag.GPWGHT" id="GPWGHT" class=" form-control GPWGHT" name="GPWGHT" readonly />

                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Balance Qty</label>
                                                <input type="text" value="@ViewBag.BGOQTY" id="BGOQTY" class=" form-control BGOQTY" name="BGOQTY" readonly />

                                            </div>
                                        </div>
                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Impoter</label>
                                                <input type="text" value="@ViewBag.IMPRTNAME" id="IMPRTNAME" class=" form-control IMPRTNAME" name="IMPRTNAME" readonly />

                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Steamer Name</label>
                                                <input type="text" value="@ViewBag.STMRNAME" id="STMRNAME" class=" form-control STMRNAME" name="STMRNAME" readonly />

                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Vehicle No</label>
                                                @Html.TextBoxFor(model => Model.VHLNO, new { @class = "form-control  VHLNO ", @id = "VHLNO", @required = "required", @data_autocomplete_url = @Url.Action("AutoVehicle", "ExportTruckOut"), tabindex = "3" })
                                            </div>
                                        </div>

                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Driver Name</label>
                                                @Html.TextBoxFor(model => Model.GDRVNAME, new { @class = "form-control GDRVNAME", @id = "GDRVNAME", @required = "required", tabindex = "4" })
                                            </div>
                                        </div>

                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Quantity</label>
                                                @Html.TextBoxFor(model => Model.GOQTY, new { @class = "form-control GOQTY", @id = "GOQTY", @required = "required", tabindex = "4" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-12 box-footer">

                                        <input type="button" name="back" value="Go Back" class="btn btn-primary btn-xs  pull-left" onclick="JavaScript:history.back()" />
                                        <input type="button" name="save2" value="Submit" id="btnsave" class="btn btn-success btn-xs" tabindex="15" />
                                        <input type="submit" name="submit" value="Submit" class="btn btn-success btn-xs hide" id="save" tabindex="100" />

                                    </div>
                                </div>
                            </fieldset>

                        </form>


                    </div>

                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts{

    <script>

        function autocomplete($obj, controls) {
            var oldFn = $.ui.autocomplete.prototype._renderItem;
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp(this.term, "i");
                var t = item.label.replace(re, "<strong style='font-weight:bold;background:#C7DFFE;border-radius:2px;border:1px solid #98B8E1'>" + this.term + "</strong>");
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };
            $obj.autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: $obj.data("autocomplete-url"),
                        type: "POST",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                count = 0;
                                item_str = "";
                                var jsonArg = new Object();
                                count = 0;
                                $.each(item, function (i, data) {
                                    switch (count) {
                                        case 0:
                                            jsonArg.label = data;
                                            jsonArg.value = data;
                                            break;
                                        case 1:
                                            jsonArg.id = data;
                                            break;
                                        case 2:
                                            jsonArg.desc = data;
                                            break;
                                        case 3:
                                            jsonArg.xparam1 = data;
                                            break;
                                        case 4:
                                            jsonArg.xparam2 = data;
                                            break;
                                        case 5:
                                            jsonArg.xparam3 = data;
                                            break
                                        case 6:
                                            jsonArg.xparam4 = data;
                                            break
                                    }
                                    count++
                                });
                                return jsonArg
                            }))
                        }
                    })
                },
                search: function () {
                    var term = extractLast(this.value);
                    if (term.length < 2) {
                        return false
                    }
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 1:
                                $("#" + value).val(ui.item.id);
                                break;
                            case 2:
                                $("#" + value).val(ui.item.desc);
                                break;
                            case 3:
                                $("#" + value).val(ui.item.xparam1);
                                break;
                            case 4:
                                var MyDate_String_Value = ui.item.xparam2;
                                var value1 = new Date
                                    (
                                        parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, ''))
                                    );
                                var dat = value1.getDate() +
                                    "/" +
                                    eval(value1.getMonth() + 1) +

                                    "/" +
                                    value1.getFullYear();
                                //   alert(dat);
                                $("#" + value).val(dat);
                                //   $("#" + value).val(ui.item.xparam2);
                                break;
                            case 5:

                                $("#" + value).val(ui.item.xparam3);
                                break;
                            case 6: //alert(ui.item.xparam4 + "6");
                                $("#" + value).val(ui.item.xparam4);
                                break;
                        }
                        count++
                    });


                    return false;
                },
                messages: {
                    noResults: "",
                    results: ""
                }
            })
        }////......end

        $(function () {
            window.onbeforeunload = function () {
                $("input[type=submit]").attr("disabled", "disabled");
            };

            $('input[id$=GODATE]').datepicker({
                dateFormat: 'dd/mm/yy',
                maxDate: new Date(),
                onClose: function (dateText, inst) {
                    $("#GODATE").focus();
                }
            });

            $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });

            if ($('#GODID').val() == "" || $('#GODID').val() == "0") {
                $('#GODID').val("0");
                var dt = new Date();

                var year = dt.getFullYear();
                var month = dt.getMonth() + 1;
                var day = dt.getDate();

                if (month < 10) month = "0" + month;
                if (day < 10) day = "0" + day;

                //var month = dt.getMonth() + 1;
                //var date = dt.getDate() + "/" + month + "/" + dt.getFullYear();
                //console.log(year + '/' + month + '/' + day);

                var date = day + '/' + month + '/' + year;

                var hours = dt.getHours();
                var minutes = dt.getMinutes();
                var seconds = dt.getSeconds();

                if (hours < 10) hours = "0" + hours;
                if (minutes < 10) minutes = "0" + minutes;
                if (seconds < 10) seconds = "0" + seconds;

                var time = hours + ':' + minutes + ':' + seconds;

                $(".GODATE").val(date);

                $(".GOTIME").val(time);
            }
            else {
                var GODID = $(".GODID").val();
                var url = "/ImportCargoOut/GetCargoGateOutDet/" + GODID;

                $.getJSON(url, function (data) {


                    $.each(data, function (key, val) {
                        var MyDate_String_Value = val.GIDATE;
                        var f_value = new Date
                            (
                                parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var month = parseInt(f_value.getMonth()) + 1;
                        var dat = f_value.getDate() +
                            "/" + month +

                            "/" +

                            f_value.getFullYear();
                        var SIZE = val.CONTNRSDESC;
                        var GPWGHT = val.GPWGHT;
                        var BGOQTY = val.BGOQTY;
                        var PRDTDESC = val.PRDTDESC
                        var PRDTGDESC = val.PRDTGDESC;
                        var VHLNO = val.VHLNO;
                        var IMPRTNAME = val.IMPRTNAME;
                        var STMRNAME = val.STMRNAME;
                        $("#STMRNAME").val(STMRNAME);
                        $("#IMPRTNAME").val(IMPRTNAME);
                        $("#SIZE").val(SIZE);
                        $("#GIDATE").val(dat);
                        $("#PRDTGDESC").val(PRDTGDESC);
                        $("#GPWGHT").val(GPWGHT);
                        $("#BGOQTY").val(BGOQTY);
                        $("#PRDTDESC").val(PRDTDESC);
                        $("#VHLNO").val(VHLNO);
                    });
                });
            }

            //$('.time').timepicker();

            autocomplete($("#VHLNO"), "VHLNO,GIDID,CHASNAME,CHAID,GIDATE,GDRVNAME")

            $("#GIDID").change(function () {

                var GIDID = $(".GIDID option:selected").val();
                var url = "/ImportCargoOut/GetCargoGateInDet/" + GIDID;

                $.getJSON(url, function (data) {


                    $.each(data, function (key, val) {
                        var MyDate_String_Value = val.GIDATE;
                        var f_value = new Date
                            (
                                parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var month = parseInt(f_value.getMonth()) + 1;
                        var dat = f_value.getDate() +
                            "/" + month +

                            "/" +

                            f_value.getFullYear();
                        var SIZE = val.CONTNRSDESC;
                        var GPWGHT = val.GPWGHT;
                        var BGOQTY = val.BGOQTY;
                        var PRDTDESC = val.PRDTDESC
                        var PRDTGDESC = val.PRDTGDESC;
                        var VHLNO = val.VHLNO;
                        var IMPRTNAME = val.IMPRTNAME;
                        var STMRNAME = val.STMRNAME;
                        $("#STMRNAME").val(STMRNAME);
                        $("#IMPRTNAME").val(IMPRTNAME);
                        $("#SIZE").val(SIZE);
                        $("#GIDATE").val(dat);
                        $("#PRDTGDESC").val(PRDTGDESC);
                        $("#GPWGHT").val(GPWGHT);
                        $("#BGOQTY").val(BGOQTY);
                        $("#PRDTDESC").val(PRDTDESC);
                        $("#VHLNO").val(VHLNO);
                    });
                });
            });





            //------------------Block Type function----------



            if ($(".GODID").val() != 0) {
                var GIDID = $(".GIDID").val();
                var url = "/ImportTruckOut/DetailEdit/" + GIDID;

                $.getJSON(url, function (data) {


                    $.each(data, function (key, val) {
                        var MyDate_String_Value = val.GIDATE;
                        var f_value = new Date
                            (
                                parseInt(MyDate_String_Value.replace(/(^.*\()|([+-].*$)/g, ''))
                            );
                        var month = parseInt(f_value.getMonth()) + 1;
                        var dat = f_value.getDate() +
                            "/" + month +

                            "/" +

                            f_value.getFullYear();
                        var SIZE = val.CONTNRSDESC;
                        var GPWGHT = val.GPWGHT;
                        var BGOQTY = val.BGOQTY;
                        var PRDTDESC = val.PRDTDESC
                        var PRDTGDESC = val.PRDTGDESC;
                        var VHLNO = val.VHLNO;
                        var IMPRTNAME = val.IMPRTNAME;
                        var STMRNAME = val.STMRNAME;
                        $("#STMRNAME").val(STMRNAME);
                        $("#IMPRTNAME").val(IMPRTNAME);
                        $("#SIZE").val(SIZE);
                        $("#GIDATE").val(dat);
                        $("#PRDTGDESC").val(PRDTGDESC);
                        $("#GPWGHT").val(GPWGHT);
                        $("#BGOQTY").val(BGOQTY);
                        $("#PRDTDESC").val(PRDTDESC);
                        $("#VHLNO").val(VHLNO);
                    });
                });
            }


        });


        $("#btnsave").click(function () {
            flag = true;
            if ($('#GODATE').val() == "") {
                alert('Please Enter In Date !!');
                flag = false;
                $('#GODATE').focus();
            }
            else if ($('#GOTIME').val() == "") {
                alert('Please Enter In Time !!');
                flag = false;
                $('#GOTIME').focus();
            }
            else if ($('#VHLNO').val() == "") {
                alert('Please Enter Vehicle No !!');
                flag = false;
                $('#VHLNO').focus();

            }
            else if ($('#GDRVNAME').val() == "") {
                alert('Please Enter Driver Name !!');
                flag = false;
                $('#GDRVNAME').focus();
            }
            else if ($('#GOQTY').val() == "") {
                alert('Please Enter Quantity !!');
                flag = false;
                $('#GOQTY').focus();

            }
           
           


            if (flag) {

                if ($("#GDRVNAME").val() == "") { $("#GDRVNAME").val(""); }
                if ($("#GOQTY").val() == "") { $("#GOQTY").val("0"); }
                if ($("#VHLNO").val() == "") { $("#VHLNO").val("-"); }
              
                var tab = ($("#ImportCargoOutfrm").serialize());
                console.log(tab);
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("SaveData", "ImportCargoOut")', // we are calling json method
                    data: tab,
                    success: function (data) {

                        if (data == "Save") {

                            var returnurl = '@Url.Action("Index", "ImportCargoOut")';
                            window.location.href = returnurl;
                            alert('Saved Successfully');

                        }
                    },

                    error: function (ex) {
                        //alert('Failed to save data ' + ex);
                    }
                });
            }
        });

        function Validate() {
            if ($("#GIDID").val() == "0") {
                alert("Please Select Vehicle No...!");
                $(".VHLNO").val(""); $(".VHLNO").focus(); return false;
            }
        }
    </script>
    @*@Scripts.Render("~/bundles/jqueryval")*@
}
