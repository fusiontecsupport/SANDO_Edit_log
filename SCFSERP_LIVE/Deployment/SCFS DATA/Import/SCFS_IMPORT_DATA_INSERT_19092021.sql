select * from GATEINDETAIL where SDPTID not in(9,11)

select * from GATEINDETAIL where SDPTID in(1)

--delete from GATEINDETAIL where SDPTID not in(9,11) --AND ISNULL(OLDGID ,0) <> 0

--Gate In Details
Select * From [SCFS].dbo.GATEINDETAIL (NOLOCK) INNER JOIN
       [SCFS].dbo.z_din_18092021 (NOLOCK) ON [SCFS].dbo.GATEINDETAIL.GIDID = [SCFS].dbo.z_din_18092021.GIDID
select * from [SCFS].dbo.z_din_18092021

--Opensheet Details
Select * From [SCFS].dbo.GATEINDETAIL INNER JOIN
       [SCFS].dbo.z_din_18092021 ON [SCFS].dbo.GATEINDETAIL.GIDID = [SCFS].dbo.z_din_18092021.GIDID
select * from [SCFS].dbo.z_din_18092021

-- OLD REF ID
USE SCFS_ERP
GO

alter table REMOTEGATEINDETAIL
add OLDGID INT NULL DEFAULT 0


alter table GATEINDETAIL
add OLDGID INT NULL DEFAULT 0


-- OLD REF ID
USE SCFS_ERP
GO

alter table OPENSHEETMASTER
add OLDOSMID INT NULL DEFAULT 0


alter table OPENSHEETDETAIL 
add OLDOSDID INT NULL DEFAULT 0

alter table BILLENTRYDETAIL
add OLDBILLEDID INT NULL DEFAULT 0

alter table AUTHORIZATIONSLIPDETAIL
add OLDASLDID INT NULL DEFAULT 0


alter table VEHICLETICKETDETAIL
add OLDVTDID INT NULL DEFAULT 0

alter table GATEOUTDETAIL
add OLDGODID INT NULL DEFAULT 0

alter table DELIVERYORDERDETAIL
add OLDDODID int null default 0
GO

USE SCFS
GO

--alter VIEW [dbo].[z_din_18092021]
--AS
--SELECT        dbo.GATEINDETAIL.GIDID, dbo.OPENSHEETDETAIL.OSDID, dbo.OPENSHEETDETAIL.OSMID, dbo.BILLENTRYDETAIL.BILLEDID, dbo.BILLENTRYMASTER.BILLEMID, dbo.GATEINDETAIL.IGMNO, dbo.GATEINDETAIL.GPLNO, 
--                         dbo.GATEINDETAIL.CONTNRNO, ISNULL(AUTHORIZATIONSLIPDETAIL.ASLDID,0) AS ASLDID, 
--						 ISNULL(AUTHORIZATIONSLIPDETAIL.ASLMID,0) AS ASLMID, ISNULL(VEHICLETICKETDETAIL.VTDID,0) AS VTDID, ISNULL(GATEOUTDETAIL.GODID,0) AS GODID
--FROM            dbo.BILLENTRYMASTER (nolock) INNER JOIN
--                         dbo.BILLENTRYDETAIL  (nolock) ON dbo.BILLENTRYMASTER.BILLEMID = dbo.BILLENTRYDETAIL.BILLEMID INNER JOIN
--                         (DBO.OPENSHEETDETAIL  (NOLOCK)  INNER JOIN DBO.OPENSHEETMASTER ON OPENSHEETDETAIL.OSMID = OPENSHEETMASTER.OSMID )
--						 ON dbo.BILLENTRYDETAIL.BILLEDID = dbo.OPENSHEETDETAIL.BILLEDID INNER JOIN
--                         dbo.GATEINDETAIL (nolock)  ON dbo.BILLENTRYDETAIL.GIDID = dbo.GATEINDETAIL.GIDID INNER JOIN
--						-- dbo.[z_din_25092021] (nolock) on GATEINDETAIL.GIDID = [z_din_25092021].GIDID INNER JOIN
--                         dbo.CATEGORYMASTER  (nolock) ON DBO.OPENSHEETMASTER.OSBILLREFID = dbo.CATEGORYMASTER.CATEID LEFT OUTER JOIN
--						 DBO.AUTHORIZATIONSLIPDETAIL (NOLOCK) ON OPENSHEETDETAIL.OSDID = AUTHORIZATIONSLIPDETAIL. OSDID LEFT OUTER JOIN
--                         dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01  (nolock) ON dbo.BILLENTRYDETAIL.BILLEDID = dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.BILLEDID
--                        LEFT OUTER JOIN
--						 VEHICLETICKETDETAIL (NOLOCK) ON AUTHORIZATIONSLIPDETAIL.ASLDID = VEHICLETICKETDETAIL.ASLDID LEFT OUTER JOIN
--						 GATEOUTDETAIL (NOLOCK) ON GATEINDETAIL.GIDID = GATEOUTDETAIL.GIDID 
--WHERE        (ISNULL(dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.TRANDID, 0) = 0)
--AND GATEINDETAIL.SDPTID = 1
--GROUP BY dbo.BILLENTRYMASTER.BILLEMID, dbo.GATEINDETAIL.GIDID, dbo.OPENSHEETDETAIL.OSDID, dbo.OPENSHEETDETAIL.OSMID, dbo.BILLENTRYDETAIL.BILLEDID, dbo.GATEINDETAIL.IGMNO, dbo.GATEINDETAIL.GPLNO, 
--                         dbo.GATEINDETAIL.CONTNRNO,  ISNULL(AUTHORIZATIONSLIPDETAIL.ASLDID,0) ,	 ISNULL(AUTHORIZATIONSLIPDETAIL.ASLMID,0), ISNULL(VEHICLETICKETDETAIL.VTDID,0), ISNULL(GATEOUTDETAIL.GODID,0) 
IF EXISTS (SELECT '*' FROM SYSOBJECTS WHERE NAME = 'z_din_18092021')
DROP TABLE z_din_18092021 -- DROP VIEW z_din_18092021 


SELECT			SCFS.dbo.GATEINDETAIL.GIDID, SCFS.dbo.OPENSHEETDETAIL.OSDID, SCFS.dbo.OPENSHEETDETAIL.OSMID, SCFS.dbo.BILLENTRYDETAIL.BILLEDID, SCFS.dbo.BILLENTRYMASTER.BILLEMID, 
				SCFS.dbo.GATEINDETAIL.IGMNO, dbo.GATEINDETAIL.GPLNO, SCFS.dbo.GATEINDETAIL.CONTNRNO, ISNULL(SCFS.dbo.AUTHORIZATIONSLIPDETAIL.ASLDID, 0) AS ASLDID, 
				ISNULL(SCFS.dbo.AUTHORIZATIONSLIPDETAIL.ASLMID, 0) AS ASLMID, ISNULL(SCFS.dbo.VEHICLETICKETDETAIL.VTDID, 0) AS VTDID, 
				ISNULL(SCFS.dbo.GATEOUTDETAIL.GODID, 0) AS GODID, ISNULL(SCFS.dbo.DELIVERYORDERDETAIL.DODID, 0) AS DODID
INTO z_din_18092021
FROM            SCFS.dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01 WITH (nolock) RIGHT OUTER JOIN
                         SCFS.dbo.AUTHORIZATIONSLIPDETAIL WITH (NOLOCK) RIGHT OUTER JOIN
                         SCFS.dbo.OPENSHEETDETAIL WITH (NOLOCK) LEFT OUTER JOIN
                         SCFS.dbo.BILLENTRYMASTER WITH (nolock) RIGHT OUTER JOIN
                         SCFS.dbo.DELIVERYORDERDETAIL RIGHT OUTER JOIN
                         SCFS.dbo.BILLENTRYDETAIL WITH (nolock) ON SCFS.dbo.DELIVERYORDERDETAIL.BILLEDID = SCFS.dbo.BILLENTRYDETAIL.BILLEDID ON SCFS.dbo.BILLENTRYMASTER.BILLEMID = dbo.BILLENTRYDETAIL.BILLEMID ON 
                         SCFS.dbo.OPENSHEETDETAIL.BILLEDID = SCFS.dbo.BILLENTRYDETAIL.BILLEDID LEFT OUTER JOIN
                         SCFS.dbo.OPENSHEETMASTER ON SCFS.dbo.OPENSHEETDETAIL.OSMID = SCFS.dbo.OPENSHEETMASTER.OSMID RIGHT OUTER JOIN
                         SCFS.dbo.GATEINDETAIL WITH (nolock) ON SCFS.dbo.OPENSHEETDETAIL.GIDID = SCFS.dbo.GATEINDETAIL.GIDID LEFT OUTER JOIN
                         SCFS.dbo.GATEOUTDETAIL WITH (NOLOCK) ON SCFS.dbo.GATEINDETAIL.GIDID = SCFS.dbo.GATEOUTDETAIL.GIDID ON SCFS.dbo.AUTHORIZATIONSLIPDETAIL.OSDID = SCFS.dbo.OPENSHEETDETAIL.OSDID ON 
                         SCFS.dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.BILLEDID = SCFS.dbo.BILLENTRYDETAIL.BILLEDID LEFT OUTER JOIN
                         SCFS.dbo.VEHICLETICKETDETAIL WITH (NOLOCK) ON SCFS.dbo.AUTHORIZATIONSLIPDETAIL.ASLDID = SCFS.dbo.VEHICLETICKETDETAIL.ASLDID
WHERE        (ISNULL(SCFS.dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.TRANDID, 0) = 0) AND (SCFS.dbo.GATEINDETAIL.SDPTID = 1) AND (SCFS.dbo.GATEINDETAIL.CONTNRSID > 2)
GROUP BY SCFS.dbo.BILLENTRYMASTER.BILLEMID, SCFS.dbo.GATEINDETAIL.GIDID, SCFS.dbo.OPENSHEETDETAIL.OSDID, SCFS.dbo.OPENSHEETDETAIL.OSMID, SCFS.dbo.BILLENTRYDETAIL.BILLEDID, SCFS.dbo.GATEINDETAIL.IGMNO, SCFS.dbo.GATEINDETAIL.GPLNO, 
                         SCFS.dbo.GATEINDETAIL.CONTNRNO, ISNULL(SCFS.dbo.AUTHORIZATIONSLIPDETAIL.ASLDID, 0), 
						 ISNULL(SCFS.dbo.AUTHORIZATIONSLIPDETAIL.ASLMID, 0), ISNULL(SCFS.dbo.VEHICLETICKETDETAIL.VTDID, 0), 
						 ISNULL(SCFS.dbo.GATEOUTDETAIL.GODID, 0), ISNULL(SCFS.dbo.DELIVERYORDERDETAIL.DODID, 0)
GO

--GI Cursor
USE [SCFS_ERP]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

alter PROCEDURE [dbo].[Z_IMPORT_GATEIN_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  DELETE [SCFS_ERP].dbo.GATEINDETAIL WHERE OLDGID > 0 AND SDPTID = 1

	  Declare @GIDID int

      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE GIDetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT [SCFS].dbo.GATEINDETAIL.GIDID 
	  From [SCFS].dbo.GATEINDETAIL (nolock) INNER JOIN [SCFS].dbo.z_din_18092021 (nolock)
				 ON [SCFS].dbo.GATEINDETAIL.GIDID = [SCFS].dbo.z_din_18092021.GIDID
	  Group by [SCFS].dbo.GATEINDETAIL.GIDID
	  Order by [SCFS].dbo.GATEINDETAIL.GIDID
  
      --OPEN CURSOR.
      OPEN GIDetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM GIDetail INTO @GIDID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_GATEIN_DETAIL_INSERT_XML @GIDID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM GIDetail INTO @GIDID
      END
 
      --CLGIE THE CURSOR.
      CLOSE GIDetail
      DEALLOCATE GIDetail


END


--GI DEtail Insert
USE [SCFS_ERP]
GO
/****** Object:  StoredProcedure [dbo].[Z_IMPORT_GATEIN_DETAIL_INSERT_XML]    Script Date: 20/09/2021 19:37:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
alter PROCEDURE [dbo].[Z_IMPORT_GATEIN_DETAIL_INSERT_XML] 
@PGIDID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int

	  Set @ccount = 1
	  Set @boecount = 0

	  If @ccount > 0 

  			INSERT INTO [SCFS_ERP].dbo.GATEINDETAIL
			(COMPYID, SDPTID, GIDATE, GITIME, GICCTLDATE, GICCTLTIME, GINO, GIDNO, GIVHLTYPE, TRNSPRTID, TRNSPRTNAME, VHLNO, DRVNAME, GPREFNO, IMPRTID, IMPRTNAME, STMRID, STMRNAME, CONTNRTID, 
									 CONTNRID, CONTNRSID, CONTNRNO, LPSEALNO, CSEALNO, YRDID, VSLID, VSLNAME, VOYNO, PRDTGID, PRDTDESC, UNITID, GPWGHT, IGMNO, GPLNO, GPWTYPE, GPSTYPE, GPETYPE, BOEDID, INVDID, RGIDID, 
									 GIREMKRS, SLOTID, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, GPEAMT, CHAID, CHANAME, AVHLNO, GPNOP, PRDTTID, GIISOCODE, GIDMGDESC, NGIDID, GPNWGHT, GPGWGHT, GPCBM, GPLENGTH, GPWIDTH, 
									 GPHEIGHT, GPBLNO, GPAAMT, CLNTID, CLNTNAME, SHPRNAME, GPPLCNAME, GPTWGHT, CONTNRFID, CONDTNID, GRADEID, CNTNRSID, GPPTYPE, GFCLTYPE, GSEALTYPE, GSECTYPE, GSEALREMKRS, GSECREMKRS, 
									 GPNRNO, ESBNO, EVSLRNO, EMONO, EEGMNO, ESBDATE, GPSCNTYPE, IGMDATE, BLNO, GPMODEID, OLDGID)
			Select COMPYID, SDPTID, GIDATE, GITIME, GICCTLDATE, GICCTLTIME, GINO, GIDNO, GIVHLTYPE, TRNSPRTID, TRNSPRTNAME, VHLNO, 
			DRVNAME, GPREFNO, IMPRTID, IMPRTNAME, STMRID, STMRNAME, CONTNRTID, CONTNRID, CONTNRSID, 
			[SCFS].dbo.GATEINDETAIL.CONTNRNO, LPSEALNO, CSEALNO, YRDID, VSLID, VSLNAME, VOYNO, PRDTGID, PRDTDESC, UNITID, GPWGHT, 
			[SCFS].dbo.GATEINDETAIL.IGMNO, [SCFS].dbo.GATEINDETAIL.GPLNO, GPWTYPE, GPSTYPE, GPETYPE, BOEDID, INVDID, RGIDID, 
			GIREMKRS, SLOTID, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, GPEAMT, CHAID, CHANAME, AVHLNO, GPNOP, PRDTTID, GIISOCODE, 
			GIDMGDESC, NGIDID, GPNWGHT, GPGWGHT, GPCBM, GPLENGTH, GPWIDTH, GPHEIGHT, GPBLNO, GPAAMT, CLNTID, CLNTNAME, SHPRNAME, 
			GPPLCNAME, GPTWGHT, CONTNRFID, CONDTNID, GRADEID, CNTNRSID, GPPTYPE, CASE WHEN GFCLTYPE = 0 THEN 1 ELSE 0 END, GSEALTYPE, GSECTYPE, GSEALREMKRS, 
			GSECREMKRS, GPNRNO, ESBNO, EVSLRNO, EMONO, EEGMNO, ESBDATE, GPSCNTYPE, IGMDATE, BLNO, GPMODEID, GATEINDETAIL.GIDID
			From [SCFS].dbo.GATEINDETAIL (NOLOCK) 
			--INNER JOIN [SCFS].dbo.z_din_18092021 (NOLOCK) ON [SCFS].dbo.GATEINDETAIL.GIDID = [SCFS].dbo.z_din_18092021.GIDID
			where [SCFS].dbo.GATEINDETAIL.GIDID = @PGIDID

	update [SCFS_ERP].dbo.GATEINDETAIL
	set CONTNRID = 1
	where GIDID = @PGIDID
	and CONTNRID = 0
END



ALTER PROCEDURE [dbo].[Z_IMPORT_REMOTEGATEIN_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  DELETE [SCFS_ERP].dbo.REMOTEGATEINDETAIL WHERE OLDGID > 0 AND SDPTID = 1

	  Declare @GIDID int

      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE RGIDetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT GIDID 
	  From [SCFS].dbo.Z_IMP_RGIN (nolock) 
	  Group by GIDID
	  Order by GIDID
  
      --OPEN CURSOR.
      OPEN RGIDetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM RGIDetail INTO @GIDID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_REMOTEGATEIN_DETAIL_INSERT_XML @GIDID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM RGIDetail INTO @GIDID
      END
 
      --CLGIE THE CURSOR.
      CLOSE RGIDetail
      DEALLOCATE RGIDetail


END


--RGI DEtail Insert
USE [SCFS_ERP]
GO
/****** Object:  StoredProcedure [dbo].[Z_IMPORT_REMOTEGATEIN_DETAIL_INSERT_XML]    Script Date: 20/09/2021 19:37:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[Z_IMPORT_REMOTEGATEIN_DETAIL_INSERT_XML] 
@PGIDID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int

	  Set @ccount = 1
	  Set @boecount = 0

	  If @ccount > 0 

  			INSERT INTO [SCFS_ERP].dbo.REMOTEGATEINDETAIL
			(COMPYID, SDPTID, GIDATE, GITIME, GICCTLDATE, GICCTLTIME, GINO, GIDNO, GPREFNO, IMPRTID, IMPRTNAME, STMRID, STMRNAME, CONTNRTID, CONTNRID, CONTNRSID, CONTNRNO, 
			 VSLID, VSLNAME, VOYNO, PRDTGID, PRDTDESC, UNITID, GPWGHT, IGMNO, GPLNO, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, GIISOCODE, GPNWGHT, GPGWGHT , GPCBM, GPLENGTH, 
			 GPWIDTH, GPHEIGHT, GPBLNO, GPEAMT, GPAAMT, GPPTYPE,  WMDID, IGMDATE, BLNO, GPMODEID, OLDGID)
			Select COMPYID, SDPTID, GIDATE, GITIME, GICCTLDATE, GICCTLTIME, GINO, GIDNO, GPREFNO, IMPRTID, IMPRTNAME, STMRID, STMRNAME, CONTNRTID, CONTNRID, CONTNRSID, CONTNRNO, 
			 VSLID, VSLNAME, VOYNO, PRDTGID, PRDTDESC, UNITID, GPWGHT, IGMNO, GPLNO, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, GIISOCODE, GPNWGHT, GPGWGHT , GPCBM, GPLENGTH, 
			 GPWIDTH, GPHEIGHT, GPBLNO, GPEAMT, GPAAMT, GPPTYPE,  WMDID, IGMDATE, BLNO, GPMODEID, REMOTEGATEINDETAIL.GIDID
			From [SCFS].dbo.REMOTEGATEINDETAIL (NOLOCK) 
			--INNER JOIN [SCFS].dbo.z_din_18092021 (NOLOCK) ON [SCFS].dbo.GATEINDETAIL.GIDID = [SCFS].dbo.z_din_18092021.GIDID
			where [SCFS].dbo.REMOTEGATEINDETAIL.GIDID = @PGIDID

	update [SCFS_ERP].dbo.REMOTEGATEINDETAIL
	set CONTNRID = 1
	where GIDID = @PGIDID
	and CONTNRID = 0
END

--OS Cursor
USE [SCFS_ERP]
GO
/****** Object:  StoredProcedure [dbo].[Z_IMPORT_OPNSHEET_DETAIL_Auto_Generate_XML]    Script Date: 20/09/2021 19:37:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

alter PROCEDURE [dbo].[Z_IMPORT_OPNSHEET_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  Delete a 
	  From [SCFS_ERP].dbo.OPENSHEETMASTER a join [SCFS_ERP].dbo.OPENSHEETDETAIL b on a.osmid = b.OSMID 
	  where b.OLDOSDID > 0

	  Declare @OSMID int

      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE OSDetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT [SCFS].dbo.OPENSHEETMASTER.OSMID 
	  From [SCFS].dbo.OPENSHEETMASTER (nolock) INNER JOIN
	  [SCFS].dbo.z_din_18092021 (nolock) ON [SCFS].dbo.OPENSHEETMASTER.OSMID = [SCFS].dbo.z_din_18092021.OSMID
	  Group by [SCFS].dbo.OPENSHEETMASTER.OSMID
	  Order by [SCFS].dbo.OPENSHEETMASTER.OSMID
  
      --OPEN CURSOR.
      OPEN OSDetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM OSDetail INTO @OSMID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_OPNSHEET_DETAIL_INSERT_XML @OSMID, 0, 0
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM OSDetail INTO @OSMID
      END
 
      --CLOSE THE CURSOR.
      CLOSE OSDetail
      DEALLOCATE OSDetail


END


--OS / BOE - DEtail Insert
USE [SCFS_ERP]
GO
/****** Object:  StoredProcedure [dbo].[Z_IMPORT_OPNSHEET_DETAIL_INSERT_XML]    Script Date: 20/09/2021 19:37:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
alter PROCEDURE [dbo].[Z_IMPORT_OPNSHEET_DETAIL_INSERT_XML] 
@POSMID INT,
@OSMID INT OUTPUT,
@BILLEMID INT OUTPUT

AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int

	  Set @ccount = 1
	  Set @boecount = 0

	  If @ccount > 0 

  			INSERT INTO [SCFS_ERP].[dbo].[OPENSHEETMASTER]
			(
			  SDPTID, COMPYID, OSMDATE, OSMTIME, OSMNO, OSMDNO, CHAID, OSMNAME, OSMCNAME, OSMIGMNO, 
			  OSMVSLNAME, BOENO, BOEDATE, OSMTYPE, DOTYPE, DODATE, CUSRID, LMUSRID, DISPSTATUS, 
              PRCSDATE, OSMLNO, DONO, DOIDATE, SCTYPE, SCDESC, SCDATE, SCTIME, SCREMRKS, OSMAAMT, 
			  OSMBLNO, OSMNOP, OSMWGHT, OSMUNITID, OSMLNAME, OSMTNOC, OSMFNOC, OSMLCATEID, OSMLCATENAME, 
              OSBILLEDTO, OSBILLREFID, OSBILLREFNAME, OSCATEAID, OSMLDTYPE, OLDOSMID, OSBCHACATEAID 
			)
			Select SDPTID, COMPYID, OSMDATE, OSMTIME, OSMNO, OSMDNO, CHAID, OSMNAME, OSMCNAME, OSMIGMNO, 
			  OSMVSLNAME, BOENO, BOEDATE, OSMTYPE, DOTYPE, DODATE, CUSRID, LMUSRID, DISPSTATUS, 
              PRCSDATE, OSMLNO, DONO, DOIDATE, SCTYPE, SCDESC, SCDATE, SCTIME, SCREMRKS, OSMAAMT, 
			  OSMBLNO, OSMNOP, OSMWGHT, OSMUNITID, OSMLNAME, OSMTNOC, OSMFNOC, OSMLCATEID, OSMLCATENAME, 
              OSBILLEDTO, (CASE OSBILLREFID WHEN 0 THEN CHAID ELSE OSBILLREFID END) AS OSBILLREFID, 
			  (CASE OSBILLREFID WHEN 0 THEN OSMNAME ELSE OSBILLREFNAME END) AS OSBILLREFNAME, OSCATEAID,0, 
			  [SCFS].dbo.OPENSHEETMASTER.OSMID, OSCATEAID
			  From [SCFS].dbo.OPENSHEETMASTER (nolock)
				   -- INNER JOIN [SCFS].dbo.z_din_18092021 (nolock) ON [SCFS].dbo.OPENSHEETMASTER.OSMID = [SCFS].dbo.z_din_18092021.OSMID
			  Where [SCFS].dbo.OPENSHEETMASTER.OSMID = @POSMID
			  Group by SDPTID, COMPYID, OSMDATE, OSMTIME, OSMNO, OSMDNO, CHAID, OSMNAME, OSMCNAME, OSMIGMNO, 
			  OSMVSLNAME, BOENO, BOEDATE, OSMTYPE, DOTYPE, DODATE, CUSRID, LMUSRID, DISPSTATUS, 
              PRCSDATE, OSMLNO, DONO, DOIDATE, SCTYPE, SCDESC, SCDATE, SCTIME, SCREMRKS, OSMAAMT, 
			  OSMBLNO, OSMNOP, OSMWGHT, OSMUNITID, OSMLNAME, OSMTNOC, OSMFNOC, OSMLCATEID, OSMLCATENAME, 
              OSBILLEDTO, (CASE OSBILLREFID WHEN 0 THEN CHAID ELSE OSBILLREFID END) , 
			  (CASE OSBILLREFID WHEN 0 THEN OSMNAME ELSE OSBILLREFNAME END) , OSCATEAID,[SCFS].dbo.OPENSHEETMASTER.OSMID

     
			 SET @OSMID = SCOPE_IDENTITY()

  			INSERT INTO [SCFS_ERP].[dbo].[BILLENTRYMASTER]
			(
			  SDPTID, COMPYID, BILLEMDATE, BILLEMTIME, BILLEMNO, BILLEMDNO, CHAID, BILLEMNAME, BILLEMAAMT, 
			  BLNO, NOP, WGHT, UNITID, BILLEDMTYPE, DPAIDNO, DPAIDAMT, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE
			)
			Select SDPTID, COMPYID, BILLEMDATE, BILLEMTIME, BILLEMNO, BILLEMDNO, CHAID, BILLEMNAME, BILLEMAAMT, 
			  BLNO, NOP, WGHT, UNITID, BILLEDMTYPE, DPAIDNO, DPAIDAMT, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE
			  From [SCFS].dbo.BILLENTRYMASTER A(nolock) INNER JOIN 
								SCFS.DBO.BILLENTRYDETAIL C(NOLOCK) JOIN SCFS.DBO.OPENSHEETDETAIL B(NOLOCK) ON C.BILLEDID = B.BILLEDID
							ON A.BILLEMID = C.BILLEMID
						
				   --[SCFS].dbo.z_din_18092021 (nolock) ON [SCFS].dbo.BILLENTRYMASTER.BILLEMID = [SCFS].dbo.z_din_18092021.BILLEMID
			  --Where [SCFS].dbo.z_din_18092021.OSMID = @POSMID
			   Where B.OSMID = @POSMID
			  Group by SDPTID, COMPYID, BILLEMDATE, BILLEMTIME, BILLEMNO, BILLEMDNO, CHAID, BILLEMNAME, BILLEMAAMT, 
			  BLNO, NOP, WGHT, UNITID, BILLEDMTYPE, DPAIDNO, DPAIDAMT, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE

			  SET @BILLEMID = SCOPE_IDENTITY()

            INSERT INTO [SCFS_ERP].dbo.OPENSHEETDETAIL(
			OSMID, GIDID, GIDATE, INSPTYPE, LSEALNO, SSEALNO, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, BILLEDID, 
			CSEALNO, OLDOSDID)
			Select @OSMID, GIDID, GIDATE, INSPTYPE, LSEALNO, SSEALNO, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, 
			0, '', [SCFS].dbo.OPENSHEETDETAIL.OSDID
			From [SCFS].dbo.OPENSHEETDETAIL(nolock) Where OSMID = @POSMID 
			Order by [SCFS].dbo.OPENSHEETDETAIL.OSDID

            INSERT INTO [SCFS_ERP].dbo.BILLENTRYDETAIL(
			BILLEMID, GIDID, GIDATE, DNOP, DWGHT, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, OLDBILLEDID)
			Select @BILLEMID, [SCFS].dbo.BILLENTRYDETAIL.GIDID, [SCFS].dbo.BILLENTRYDETAIL.GIDATE, 
			[SCFS].dbo.BILLENTRYDETAIL.DNOP, [SCFS].dbo.BILLENTRYDETAIL.DWGHT, 
			[SCFS].dbo.BILLENTRYDETAIL.CUSRID, [SCFS].dbo.BILLENTRYDETAIL.LMUSRID, 
			[SCFS].dbo.BILLENTRYDETAIL.DISPSTATUS, [SCFS].dbo.BILLENTRYDETAIL.PRCSDATE, [SCFS].dbo.BILLENTRYDETAIL.BILLEDID
			From [SCFS].dbo.OPENSHEETDETAIL (nolock) INNER JOIN
				   [SCFS].dbo.BILLENTRYDETAIL (nolock) ON [SCFS].dbo.OPENSHEETDETAIL.BILLEDID = [SCFS].dbo.BILLENTRYDETAIL.BILLEDID
			Where OSMID = @POSMID 
			Order by [SCFS].dbo.OPENSHEETDETAIL.OSDID

END


-- ASL DETAILS

USE [SCFS_ERP]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--ASL Cursor
alter PROCEDURE [dbo].[Z_IMPORT_ASL_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  Delete A
	  From AUTHORIZATIONSLIPMASTER A JOIN AUTHORIZATIONSLIPDETAIL B ON A.ASLMID = B.ASLMID 
	  WHERE OLDASLDID > 0 AND SDPTID = 1

	  --Delete From AUTHORIZATIONSLIPDETAIL WHERE OLDASLDID > 0 AND SDPTID = 1

	  Declare @ASLDID int
	  
	  --DBCC CHECKIDENT ('AUTHORIZATIONSLIPMASTER', RESEED,1236)
	  --DBCC CHECKIDENT ('AUTHORIZATIONSLIPDETAIL', RESEED,1236)


      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE ASLDetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT A.ASLDID 
	  From [SCFS].dbo.AUTHORIZATIONSLIPDETAIL A (NOLOCK) INNER JOIN [SCFS].dbo.z_din_18092021 B (NOLOCK)
			ON A.ASLDID = B.ASLDID
	  WHERE B.ASLDID > 0
	  Group by  A.ASLDID
	  Order by  A.ASLDID
  
      --OPEN CURSOR.
      OPEN ASLDetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM ASLDetail INTO @ASLDID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_ASL_DETAIL_INSERT_XML @ASLDID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM ASLDetail INTO @ASLDID
      END
 
      --CLOSE THE CURSOR.
      CLOSE ASLDetail
      DEALLOCATE ASLDetail


END

USE [SCFS_ERP]
GO
alter  PROCEDURE [dbo].[Z_IMPORT_ASL_DETAIL_INSERT_XML] 
@ASLDID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int, @ASLMID INT

	  Set @ccount = 1
	  Set @boecount = 0

	  If @ccount > 0 
			-- SELECT TOP 5 * FROM AUTHORIZATIONSLIPMASTER
  			--IF NOT EXISTS (	SELECT '*' 
					--		FROM  [SCFS_ERP].dbo.AUTHORIZATIONSLIPMASTER A(NOLOCK) INNER JOIN
					--		[SCFS].dbo.z_din_18092021 b(nolock) ON a.ASLMID = b.ASLMID
					--		Where B.ASLDID = @ASLDID)
		
			INSERT INTO [SCFS_ERP].[dbo].AUTHORIZATIONSLIPMASTER
			(
			  COMPYID, SDPTID, ASLMDATE, ASLMTIME, ASLMNO, ASLMDNO, ASLMTYPE, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE ,
			  NGIDID , NGINO
			)
			Select	A.COMPYID, A.SDPTID, A.ASLMDATE, A.ASLMTIME, A.ASLMNO, A.ASLMDNO, A.ASLMTYPE, A.CUSRID, A.LMUSRID, 
					A.DISPSTATUS, A.PRCSDATE , A.NGIDID , A.NGINO
			From [SCFS].dbo.AUTHORIZATIONSLIPMASTER A(NOLOCK) inner join [SCFS].dbo.AUTHORIZATIONSLIPDETAIL b(NOLOCK)
					ON a.ASLMID = b.ASLMID
					-- INNER JOIN [SCFS].dbo.z_din_18092021 b(nolock) ON a.ASLMID = b.ASLMID
			  Where b.ASLDID = @ASLDID
			  Group by  A.COMPYID, A.SDPTID, A.ASLMDATE, A.ASLMTIME, A.ASLMNO, A.ASLMDNO, A.ASLMTYPE, A.CUSRID, A.LMUSRID, 
					A.DISPSTATUS, A.PRCSDATE , A.NGIDID , A.NGINO

			SET @ASLMID = SCOPE_IDENTITY()
			-- SELECT TOP 5 * FROM AUTHORIZATIONSLIPDETAIL
			INSERT INTO [SCFS_ERP].[dbo].AUTHORIZATIONSLIPDETAIL
			(
			  ASLMID, OSDID, GIDID, LCATEID, ASLDTYPE, ASLLTYPE, ASLOTYPE, VHLNO, DRVNAME, DISPSTATUS, PRCSDATE, ASLFDESC, ASLTDESC,
			  ASLDODATE, STFDID, CSEALNO, ASEALNO, SLTID, OLDASLDID
			)
			Select	@ASLMID, a.OSDID, GIDID, LCATEID, ASLDTYPE, ASLLTYPE, ASLOTYPE, VHLNO, DRVNAME, a.DISPSTATUS, A.PRCSDATE, ASLFDESC, ASLTDESC,
					ASLDODATE, STFDID, CSEALNO, ASEALNO, 0, a.ASLDID
			From [SCFS].dbo.AUTHORIZATIONSLIPDETAIL A(NOLOCK) inner join [SCFS].dbo.OPENSHEETDETAIL b(NOLOCK)
						ON A.OSDID = B.OSDID
					-- INNER JOIN [SCFS].dbo.z_din_18092021 b(nolock) ON a.ASLDID = b.ASLDID
			  Where A.ASLDID = @ASLDID
			  Group by  a.OSDID, GIDID, LCATEID, ASLDTYPE, ASLLTYPE, ASLOTYPE, VHLNO, DRVNAME, A.DISPSTATUS, A.PRCSDATE, ASLFDESC, ASLTDESC,
					ASLDODATE, STFDID, CSEALNO, ASEALNO,  a.ASLDID

END


-- DO DETAILS

USE [SCFS_ERP]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--DO Cursor
alter PROCEDURE [dbo].[Z_IMPORT_DO_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  Delete A
	  From DELIVERYORDERMASTER A JOIN DELIVERYORDERDETAIL B ON A.DOMID = B.DOMID 
	  WHERE OLDDODID > 0 AND SDPTID = 1

	  --Delete From DELIVERYORDERDETAIL WHERE OLDDODID > 0 AND SDPTID = 1

	  Declare @DODID int
	  
	  --DBCC CHECKIDENT ('DELIVERYORDERMASTER', RESEED,1236)
	  --DBCC CHECKIDENT ('DELIVERYORDERDETAIL', RESEED,1236)


      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE DODetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT B.DODID 
	  From [SCFS].dbo.z_din_18092021 B (NOLOCK)
	  WHERE B.DODID > 0
  
      --OPEN CURSOR.
      OPEN DODetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM DODetail INTO @DODID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_DO_DETAIL_INSERT_XML @DODID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM DODetail INTO @DODID
      END
 
      --CLOSE THE CURSOR.
      CLOSE DODetail
      DEALLOCATE DODetail


END

USE [SCFS_ERP]
GO
alter  PROCEDURE [dbo].[Z_IMPORT_DO_DETAIL_INSERT_XML] 
@DODID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int, @DOMID INT

	  Set @ccount = 1
	  Set @boecount = 0

	  --If @ccount > 0 
			-- SELECT TOP 5 * FROM DELIVERYORDERMASTER
  			--IF NOT EXISTS (	SELECT '*' 
					--		FROM  [SCFS_ERP].dbo.DELIVERYORDERMASTER A(NOLOCK) INNER JOIN
					--		[SCFS].dbo.z_din_18092021 b(nolock) ON a.DOMID = b.DOMID
					--		Where B.DODID = @DODID)
		
			INSERT INTO [SCFS_ERP].[dbo].DELIVERYORDERMASTER
			(
			  COMPYID, SDPTID , DODATE, DOTIME, DONO , DODNO , DOREFID, DOREFNAME, DOREFNO, DOREFDATE, DONARTN, DORMKS, 
			  DOPCOUNT, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, DOMODE, DOMODEDETL,DOREFBNAME, DOREFAMT, TARIFFMID, BANKMID
			)
			Select	A.COMPYID, A.SDPTID , A.DODATE, A.DOTIME, A.DONO , A.DODNO , A.DOREFID, A.DOREFNAME, A.DOREFNO, 
					A.DOREFDATE, A.DONARTN, A.DORMKS, A.DOPCOUNT, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE, A.DOMODE, 
					A.DOMODEDETL, A.DOREFBNAME, A.DOREFAMT, A.TARIFFMID, A.BANKMID
			From [SCFS].dbo.DELIVERYORDERMASTER A(NOLOCK) inner join [SCFS].dbo.DELIVERYORDERDETAIL b(NOLOCK)
					ON a.DOMID = b.DOMID
					-- INNER JOIN [SCFS].dbo.z_din_18092021 b(nolock) ON a.DOMID = b.DOMID
			  Where b.DODID = @DODID
			  Group by  A.COMPYID, A.SDPTID , A.DODATE, A.DOTIME, A.DONO , A.DODNO , A.DOREFID, A.DOREFNAME, A.DOREFNO, 
					A.DOREFDATE, A.DONARTN, A.DORMKS, A.DOPCOUNT, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE, A.DOMODE, 
					A.DOMODEDETL, A.DOREFBNAME, A.DOREFAMT, A.TARIFFMID, A.BANKMID

			SET @DOMID = SCOPE_IDENTITY()
			-- SELECT TOP 5 * FROM DELIVERYORDERDETAIL
			INSERT INTO [SCFS_ERP].[dbo].DELIVERYORDERDETAIL
			(
			  DOMID, BILLEDID, DODREFID, DODREFNAME, DODREFNO, DOIDATE, DOVDATE, DISPSTATUS, OLDDODID
			)
			Select	@DOMID, A.BILLEDID, A.DODREFID, A.DODREFNAME, A.DODREFNO, A.DOIDATE, A.DOVDATE, A.DISPSTATUS, A.DODID
			From [SCFS].dbo.DELIVERYORDERDETAIL A(NOLOCK) 
			  Where A.DODID = @DODID
			  Group by   A.BILLEDID, A.DODREFID, A.DODREFNAME, A.DODREFNO, A.DOIDATE, A.DOVDATE, A.DISPSTATUS, A.DODID

END
/*
SELECT * FROM GATEINDETAIL WHERE OLDGID > 0
and STMRID NOT IN (SELECT CATEID FROM CATEGORYMASTER WHERE CATETID = 3)


SELECT * FROM GATEINDETAIL WHERE OLDGID > 0
and IMPRTID NOT IN (SELECT CATEID FROM CATEGORYMASTER WHERE CATETID = 4)


SELECT * FROM GATEINDETAIL WHERE OLDGID > 0
and lcateid NOT IN (SELECT CATEID FROM CATEGORYMASTER WHERE CATETID = 6)
*/


--VT DETAILS

USE [SCFS_ERP]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--VT Cursor
alter PROCEDURE [dbo].[Z_IMPORT_VT_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  Delete  VEHICLETICKETDETAIL 
	  WHERE OLDVTDID > 0 AND SDPTID = 1

	  Declare @VTDID int
	  
	  --DBCC CHECKIDENT ('VEHICLETICKETDETAIL', RESEED,1)


      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE VTDetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT B.VTDID 
	  From [SCFS].dbo.z_din_18092021 B (NOLOCK)
	  WHERE B.VTDID > 0
  
      --OPEN CURSOR.
      OPEN VTDetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM VTDetail INTO @VTDID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_VT_DETAIL_INSERT_XML @VTDID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM VTDetail INTO @VTDID
      END
 
      --CLOSE THE CURSOR.
      CLOSE VTDetail
      DEALLOCATE VTDetail


END

USE [SCFS_ERP]
GO
alter PROCEDURE [dbo].[Z_IMPORT_VT_DETAIL_INSERT_XML] 
@VTDID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int

	  Set @ccount = 1
	  Set @boecount = 0

	  --If @ccount > 0 
			-- SELECT TOP 5 * FROM VEHICLETICKETDETAIL
		
			INSERT INTO [SCFS_ERP].[dbo].VEHICLETICKETDETAIL
			(
			  COMPYID, SDPTID, VTDATE, VTTIME, VTNO, VTDNO, ASLDID, VHLNO, DRVNAME, VTDESC, VTQTY, VTTYPE, VTSTYPE, VTREMRKS, 
			  GIDID, EGIDID , CUSRID,  LMUSRID, DISPSTATUS, PRCSDATE, VTSSEALNO, VTCTYPE, CGIDID, STFDID, EVLDATE, EVSDATE,
			  ELRDATE, TRNSPRTID, TRNSPRTNAME, GTRNSPRTNAME, VHLMID, OLDVTDID
			)
			Select	A.COMPYID, A.SDPTID, A.VTDATE, A.VTTIME, A.VTNO, A.VTDNO, A.ASLDID, A.VHLNO, A.DRVNAME, A.VTDESC, 
					A.VTQTY, A.VTTYPE, A.VTSTYPE, A.VTREMRKS, A.GIDID, A.EGIDID , A.CUSRID,  A.LMUSRID, A.DISPSTATUS, 
					A.PRCSDATE, A.VTSSEALNO, A.VTCTYPE, A.CGIDID, A.STFDID, A.EVLDATE, A.EVSDATE, A.ELRDATE, 0, 
					'', '', 0, A.VTDID
			From [SCFS].dbo.VEHICLETICKETDETAIL A(NOLOCK)
			Where A.VTDID = @VTDID
			  Group by  A.COMPYID, A.SDPTID, A.VTDATE, A.VTTIME, A.VTNO, A.VTDNO, A.ASLDID, A.VHLNO, A.DRVNAME, A.VTDESC, 
					A.VTQTY, A.VTTYPE, A.VTSTYPE, A.VTREMRKS, A.GIDID, A.EGIDID , A.CUSRID,  A.LMUSRID, A.DISPSTATUS, 
					A.PRCSDATE, A.VTSSEALNO, A.VTCTYPE, A.CGIDID, A.STFDID, A.EVLDATE, A.EVSDATE, A.ELRDATE, A.VTDID

			
END

/*
*/

--GO DETAILS

USE [SCFS_ERP]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--GO Cursor
alter  PROCEDURE [dbo].[Z_IMPORT_GO_DETAIL_Auto_Generate_XML]
AS
BEGIN
	SET NOCOUNT ON
	
      DECLARE @Counter INT
      SET @Counter = 1
      
	  Delete  GATEOUTDETAIL 
	  WHERE OLDGODID > 0 AND SDPTID = 1

	  Declare @GODID int
	  
	  --DBCC CHECKIDENT ('GATEOUTDETAIL', RESEED,1)


      --DECLARE THE CURSOR FOR A QUERY.
      DECLARE GODetail CURSOR READ_ONLY
      FOR
	  
	  Select DISTINCT b.GODID 
	  From [SCFS].dbo.z_din_18092021 B (NOLOCK)
	  WHERE B.GODID > 0
  
      --OPEN CURSOR.
      OPEN GODetail
 
      --FETCH THE RECORD INTO THE VARIABLES.
      FETCH NEXT FROM GODetail INTO @GODID
 
      --LOOP UNTIL RECORDS ARE AVAILABLE.
      WHILE @@FETCH_STATUS = 0
      BEGIN

			EXEC Z_IMPORT_GO_DETAIL_INSERT_XML @GODID
             --INCREMENT COUNTER.
			 
             SET @Counter = @Counter + 1
             
             --FETCH THE NEXT RECORD INTO THE VARIABLES.
             FETCH NEXT FROM GODetail INTO @GODID
      END
 
      --CLOSE THE CURSOR.
      CLOSE GODetail
      DEALLOCATE GODetail


END

USE [SCFS_ERP]
GO
-- GO
alter PROCEDURE [dbo].[Z_IMPORT_GO_DETAIL_INSERT_XML] 
@GODID INT
AS
BEGIN
	  SET NOCOUNT ON
	
	  Declare @ccount int, @boecount int

	  Set @ccount = 1
	  Set @boecount = 0

	  --If @ccount > 0 
			-- SELECT TOP 5 * FROM GATEOUTDETAIL
		
			INSERT INTO [SCFS_ERP].[dbo].GATEOUTDETAIL
			(
			  COMPYID, SDPTID, REGSTRID, GODATE, GOTIME, GONO, GODNO, GIDID, TRANDID, VHLNO, GDRVNAME, CHASNAME, GOBTYPE, 
			  CHAID, LSEALNO, SSEALNO, CUSRID, LMUSRID, DISPSTATUS, PRCSDATE, GOQTY, OTDID, OTDNO, CONTNRFID, BOOKID, 
			  GOPLCNAME, GOBKGNO, GOEGMNO, OVSLID, OVSLNAME, OVOYNO, GOREMRKS, EHIDATE, EHITIME, GOTRNSPRTNAME, GOTTYPE, 
			  GOOTYPE, GOCTYPE, EBLNO, ESSBLNO, ESSBLDT, ESPORT, ESTOPLACE, ESINVNO, ESINVDT, OLDGODID
			)
			Select	A.COMPYID, A.SDPTID, A.REGSTRID, A.GODATE, A.GOTIME, A.GONO, A.GODNO, A.GIDID, A.TRANDID, A.VHLNO, A.GDRVNAME, 
					A.CHASNAME, A.GOBTYPE, A.CHAID, A.LSEALNO, A.SSEALNO, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE, 
					A.GOQTY, A.OTDID, A.OTDNO, A.CONTNRFID, A.BOOKID, A.GOPLCNAME, A.GOBKGNO, A.GOEGMNO, A.OVSLID, A.OVSLNAME, 
					A.OVOYNO, A.GOREMRKS, A.EHIDATE, A.EHITIME, A.GOTRNSPRTNAME, A.GOTTYPE, A.GOOTYPE, A.GOCTYPE, A.EBLNO, 
					'', NULL, NULL, NULL, NULL, NULL, A.GODID
			From [SCFS].dbo.GATEOUTDETAIL A(NOLOCK) INNER JOIN
					[SCFS].dbo.z_din_18092021 b(nolock) ON a.GODID = b.GODID
			  Where B.GODID = @GODID
			  Group by  A.COMPYID, A.SDPTID, A.REGSTRID, A.GODATE, A.GOTIME, A.GONO, A.GODNO, A.GIDID, A.TRANDID, A.VHLNO, A.GDRVNAME, 
					A.CHASNAME, A.GOBTYPE, A.CHAID, A.LSEALNO, A.SSEALNO, A.CUSRID, A.LMUSRID, A.DISPSTATUS, A.PRCSDATE, 
					A.GOQTY, A.OTDID, A.OTDNO, A.CONTNRFID, A.BOOKID, A.GOPLCNAME, A.GOBKGNO, A.GOEGMNO, A.OVSLID, A.OVSLNAME, 
					A.OVOYNO, A.GOREMRKS, A.EHIDATE, A.EHITIME, A.GOTRNSPRTNAME, A.GOTTYPE, A.GOOTYPE, A.GOCTYPE, A.EBLNO, A.GODID

			
END


/*


*/