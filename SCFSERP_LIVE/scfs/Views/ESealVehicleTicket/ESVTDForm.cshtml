@using scfs_erp.Models;
@model scfs_erp.Models.VehicleTicketDetail

@{
    ViewBag.Title = "E-Seal Vehicle Ticket";
}

<link href="~/Content/Site.css" type="text/css" rel="stylesheet" />

<style>
    .frm_hide {
        display: none;
    }

    #sidebar {
        display: none;
    }

    #main-content {
        margin-left: auto;
    }
</style>
<div id="main-content">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-12">
                <div class="box">
                    <div class="box-header">
                        <div class="box-name">
                            <i class="glyphicon glyphicon-export"></i>
                            <strong>E-Seal Vehicle Ticket</strong>
                        </div>
                    </div>@Html.Raw(ViewBag.msg)
                    <div class="box-content" data-ng-app="myModule">
                        <form action="@Url.Content("~/ESealVehicleTicket/savedata")" method="post" accept-charset="utf-8" id="Esealvtform" data-ng-controller="myController" name="Esealvtform" onsubmit="return  Form_validate()">
                            @Html.ValidationSummary(true)
                            <fieldset id="ExportDirectVT_info">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-2 hidden">
                                            <div class="form-group">
                                                <label>Primary  </label>
                                                @Html.TextBoxFor(model => model.VTDID, new { @class = "form-control  VTDID", @id = "VTDID" })
                                                @Html.TextBoxFor(model => model.VTNO, new { @class = "form-control  VTNO", @id = "VTNO", @data_val = false })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Date<span class="required-field"></span> </label>
                                                @Html.TextBoxFor(model => model.VTDATE, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker VTDATE ", @id = "VTDATE", @data_val = false, tabindex = "1" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Time<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => Model.VTTIME, "{0:HH:mm:ss}", new { @class = "form-control timepicker VTTIME", @id = "VTTIME", @data_val = false, tabindex = "2" })
                                                @*@Html.TextBoxFor(model => model.VTTIME, new { @class = "form-control datetime VTTIME ", @id = "VTTIME", @data_val = false, tabindex = "2" })*@
                                            </div>
                                        </div>
                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>No </label>
                                                @Html.TextBoxFor(model => model.VTDNO, new { @class = "form-control VTDNO ", @id = "VTDNO", @data_val = false, @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Container No<span class="required-field"></span></label>

                                                @if (Model == null)
                                                {
                                                    @Html.DropDownList("GIDID", null, "--Select Container No--", new { @class = "form-control GIDID", @id = "GIDID", @required = "required", @tabindex = "3" })
                                                    <input type="text" value="@ViewBag.CONTNRNO" id="CONTNRNO" class=" form-control hide CONTNRNO" name="CONTNRNO" style="width:200px" readonly="readonly" />
                                                }
                                                else
                                                {
                                                    <input type="text" value="@ViewBag.CONTNRNO" id="CONTNRNO" class=" form-control CONTNRNO" name="CONTNRNO" style="width:200px" readonly="readonly"  tabindex="3" />
                                                    @Html.TextBoxFor(model => model.GIDID, new { @class = "form-control hide GIDID", @id = "GIDID", @readonly = "readonly" })
                                                }
                                            </div>
                                        </div>

                                        <div class="col-md-1">
                                            <div class="form-group">
                                                <label>Size</label>
                                                <input type="text" value="" id="SIZE" class=" form-control SIZE" name="SIZE" readonly="readonly" tabindex="-1" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>In Date </label>
                                                <input type="text" value="" id="INDATE" class=" form-control INDATE" name="INDATE" readonly="readonly" tabindex="-1" />
                                            </div>
                                        </div>
                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Cargo</label>
                                                @Html.TextBoxFor(model => model.VTDESC, new { @class = "form-control VTDESC", @id = "VTDESC", @readonly = "readonly" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Driver Name<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.DRVNAME, new { @class = "form-control DRVNAME", @id = "DRVNAME", @tabindex = "4" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-12">

                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Stuffing No</label>
                                                @Html.TextBoxFor(model => model.STFDID, new { @class = "form-control hide STFDID", @id = "STFDID", @readonly = "readonly" })
                                                <input type="text" value="" id="STFBNO" class=" form-control STFBNO" name="STFBNO" readonly="readonly" />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Exporter</label>
                                                <input type="text" value="" id="EXPRT" class=" form-control EXPRT" name="EXPRT" readonly="readonly"  tabindex="-1" />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Steamer Name</label>
                                                <input type="text" value="" id="Steamer" class=" form-control Steamer" name="Steamer" readonly="readonly"  tabindex="-1" />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Cha Name</label>
                                                <input type="text" value="" id="CHA" class=" form-control CHA" name="CHA" readonly="readonly"  tabindex="-1" />
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label>Transpoter Name<span class="required-field"></span> </label>
                                                @Html.TextBoxFor(model => model.TRNSPRTNAME, new { @class = "form-control TRNSPRTNAME", @id = "TRNSPRTNAME", @required = "required", tabindex = "8", data_autocomplete_url = Url.Action("AutoTransporter", "ExportVehicleTicket"), @placeholder = "---Please Select----" })
                                                @Html.TextBoxFor(model => model.TRNSPRTID, new { @class = "hide form-control TRNSPRTID", @id = "TRNSPRTID" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="col-md-3" id="othertransdiv">
                                            <div class="form-group">
                                                <label>Other Transpoter Name<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.GTRNSPRTNAME, new { @class = "form-control GTRNSPRTNAME", @id = "GTRNSPRTNAME", @required = "required", tabindex = "9", @maxLength = "100" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Vehicle No<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.VHLNO, new { @class = "form-control VHLNO", @id = "VHLNO", @required = "required", data_autocomplete_url = Url.Action("AutoVehicleNo", "ExportVehicleTicket"), @tabindex = "10" })
                                                @Html.TextBoxFor(model => model.VHLMID, new { @class = "form-control  VHLMID hide", @id = "VHLMID", tabindex = "-1" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Vehicle Ticket Seal No<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.VTSSEALNO, new { @class = "form-control VTSSEALNO", @id = "VTSSEALNO", @required = "required", @tabindex = "11" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Mobile No</label>
                                                <input type="text" value="" id="DRVMBLNO" class=" form-control DRVMBLNO" name="DRVMBLNO" readonly="readonly"  tabindex="-1" />
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Driving Licence No</label>
                                                <input type="text" value="" id="DRVLCNO" class=" form-control DRVLCNO" name="DRVLCNO" readonly="readonly"  tabindex="-1" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Port<span class="required-field"></span></label>
                                                @Html.DropDownListFor(model => Model.VTTYPE, new SelectList(ViewBag.VTTYPE, "value", "text"), new { @class = "form-control VTTYPE", @id = "VTTYPE", @tabindex = "12" })
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label>Loading Date<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.EVLDATE, "{0:dd/MM/yyyy}", new { @class = "form-control EVLDATE datepicker", @id = "EVLDATE", @data_val = false, @tabindex = "13" })
                                            </div>
                                        </div>

                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Sailing Date<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.EVSDATE, "{0:dd/MM/yyyy}", new { @class = "form-control EVSDATE datepicker", @id = "EVSDATE", @data_val = false, @tabindex = "12" })
                                            </div>
                                        </div>

                                        <div class="col-md-2 hide">
                                            <div class="form-group">
                                                <label>Leo Received Date<span class="required-field"></span></label>
                                                @Html.TextBoxFor(model => model.ELRDATE, "{0:dd/MM/yyyy}", new { @class = "form-control ELRDATE datepicker", @id = "ELRDATE", @data_val = false, @tabindex = "13" })
                                            </div>
                                        </div>


                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label>Remarks</label>
                                                @Html.TextAreaFor(model => model.VTREMRKS, new { @class = "form-control VTREMRKS", @id = "VTREMRKS", @tabindex = "14" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12 box-footer">
                                    <div class="col-md-12 box-footer">
                                        <input type="button" name="back" value="Go Back" class="btn btn-primary btn-xs  pull-left" onclick="JavaScript:history.back()" tabindex="16" />
                                        <input type="button" name="save2" value="Submit" id="btnsave" class="btn btn-success btn-xs" tabindex="15" />
                                        <input type="submit" name="submit" value="Submit" class="btn btn-success btn-xs hide" id="save" tabindex="15" />
                                    </div>
                                </div>
                            </fieldset>
                        </form>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>

        

        $(document).ready(function () {
            $(".datepicker").removeAttr('VTDATE').removeClass('hasDatepicker');
            $(".datepicker").datepicker({ dateFormat: 'dd/mm/yy' });
            $('.timepicker').datetimepicker({
                datepicker: false,
                format: 'H:i'
            });


        
            if ($(".VTDID").val() != 0) {
                var GIDID = $(".GIDID").val();
                $("#CONTNRNO").focus();
                $("#CONTNRNO").attr('readonly', 'readonly');
                if ($('#GIDID').val() > 0) {
                    GetEsealGateinDetails($('#GIDID').val());
                }
                if ($("#TRNSPRTID").val() == "19739") {
                    $("#othertransdiv").show();
                }
                else {
                    $("#othertransdiv").hide();
                }
            }
            else {
                $("#GIDID").focus();
                var dt = new Date();
                $("#othertransdiv").hide();
                var year = dt.getFullYear();
                var month = (dt.getMonth() + 1).toString();
                var day = dt.getDate().toString();
                if (month < 10) month = "0" + month;
                if (day < 10) day = "0" + day;
                //var month = dt.getMonth() + 1;
                //var date = dt.getDate() + "/" + month + "/" + dt.getFullYear();
                console.log(year + '/' + month + '/' + day);

                var date = day + '/' + month + '/' + year;

                var hours = dt.getHours();
                var minutes = dt.getMinutes();
                var seconds = dt.getSeconds();

                if (hours < 10) hours = "0" + hours;
                if (minutes < 10) minutes = "0" + minutes;
                if (seconds < 10) seconds = "0" + seconds;

                //var time = dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
                console.log(hours + ':' + minutes + ':' + seconds);

                var time = hours + ':' + minutes + ':' + seconds;
                var datetme = time;
                $(".datepicker").val(date);
                $(".timepicker").val(datetme);
                //$(".datetime").val(date + " " + datetme);
            }


            add_autocomplete_containerno($("#CONTNRNO"), "CONTNRNO,GIDID");
            add_autocomplete_transport($("#TRNSPRTNAME"), "TRNSPRTNAME,TRNSPRTID");
            add_autocomplete_vehicle($("#VHLNO"), "VHLMDESC,VHLMID");
        });

        function GetEsealGateinDetails(GIDID) {
            GIDID = $(".GIDID").val();
            var url = "/ESealVehicleTicket/GetEsealGateinDetails/" + GIDID;
            $.getJSON(url, function (data) {
                $.each(data, function (key, val) {
                    var CONTNRNO = val.CONTNRNO;
                    var INDATE = val.INDATE;
                    var SIZE = val.SiZe;
                    var EXPRT = val.EXPRTRNAME;
                    var STMRNAME = val.STMRNAME;
                    var TRNSPRTID = val.TRNSPRTID;
                    var CHA = val.CHANAME;
                    var GIDID = val.GIDID;
                    var TRNSPRTNAME = val.TRNSPRTNAME;
                    var VHLNO = val.VHLNO;
                    var DRVNAME = val.DRVNAME;
                    var DRVMBLNO = val.DRVMBLNO;
                    var DRVLCNO = val.DRVLCNO;

                    $("#SIZE").val(SIZE);
                    $("#INDATE").val(INDATE);
                    $("#DRVNAME").val(DRVNAME);
                    $("#EXPRT").val(EXPRT);
                    $("#CHASNAME").val(CHA);
                    $("#GIDID").val(GIDID);
                    //$("#TRNSPRTNAME").val(TRNSPRTNAME);
                    //$("#TRNSPRTID").val(TRNSPRTID);
                    //$("#VHLNO").val(VHLNO);
                    $("#CHA").val(CHA);
                    $("#Steamer").val(STMRNAME);
                    $("#CONTNRNO").val(CONTNRNO);
                    //$("#DRVMBLNO").val(DRVMBLNO);
                    //$("#DRVLCNO").val(DRVLCNO);
                });
            });
        }

        $("#GIDID").on("change", function () {
            if ($("#GIDID").val() > 0) {
                GetEsealGateinDetails($("#GIDID").val());
            }
        });

        $(window).bind("load", function () {
            if ($(".VTDID").val() == "" || $(".VTDID").val() == "0") {
                $("#CONTNRNO").removeAttr('readonly', 'readonly');
                $(".VTDID").val("0");

            }
            if ($(".VTDID").val() != 0) {
                var GIDID = $(".GIDID").val();
                $("#CONTNRNO").attr('readonly', 'readonly');
                if ($('#GIDID').val() > 0) {
                    GetEsealGateinDetails($('#GIDID').val());
                }
            }

        });

        $("#TRNSPRTNAME").on("blur", function () {
            var TRNSPRTNAME = $("#TRNSPRTNAME").val();
            var TRNSPRTID = $("#TRNSPRTID").val();
            //if (TRNSPRTID == "67554") {
            if (TRNSPRTID == "68812") {

                $("#VHLNO").val("");
                //$("#GPNRNO").val("-");
                $("#VHLMID").val("0");
                $("#GTRNSPRTNAME").val("");
                $("#othertransdiv").show();
                $("#GTRNSPRTNAME").focus()
            }
            else if (TRNSPRTID == "19739") {
                $("#VHLNO").val("");
                //$("#GPNRNO").val("-");
                $("#VHLMID").val("0");
                $("#GTRNSPRTNAME").val(TRNSPRTNAME);

                //alert($("#GTRNSPRTNAME").val());
                $("#othertransdiv").hide();
            }

            else {
                //alert("y")
                $("#GTRNSPRTNAME").val(TRNSPRTNAME);
                $("#othertransdiv").hide();
                //alert($("#GTRNSPRTNAME").val());
            }

        });

        $(".VHLNO").on("blur", function () {
            var VHLMID = $(".VHLMID").val();
            if (VHLMID == "" || VHLMID == "0") {
                VHLMID = 0;
            }
            var TRNSPRTNAME = $("#TRNSPRTNAME").val();
            var TRNSPRTID = $("#TRNSPRTID").val();
            if (TRNSPRTID == "19739") {
                if (TRNSPRTID > 0) {
                    var url = "/NonPnrGateIn/GetVehicle/" + TRNSPRTID + "-" + VHLMID;
                    //var url = "/NonPnrGateIn/GetVehicle/" + TRNSPRTID;
                    $.ajax({
                        url: url,
                        dataType: 'json',
                        async: false,
                        success: function (data) {
                            //console.log(data);
                            if (data.length > 0) {
                                //alert(data[0].VHLPNRNO);
                                $("#VHLMID").val(data[0].VHLMID);
                               
                            }
                            else {
                                $("#VHLMID").val("0");
                              
                            }
                        }
                    });
                }

            }
            else {
                $("#VHLMID").val("0");
                
            }

            //----End of function
        });

        function add_autocomplete_transport($obj, controls) {
            var oldFn = $.ui.autocomplete.prototype._renderItem;
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp(this.term, "i");
                var t = item.label.replace(re, "<strong style='font-weight:bold;background:#C7DFFE;border-radius:2px;border:1px solid #98B8E1'>" + this.term + "</strong>");
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };

            $obj.autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: $obj.data("autocomplete-url"),
                        type: "POST",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                count = 0;
                                item_str = "";
                                var jsonArg = new Object();
                                count = 0;
                                $.each(item, function (i, data) {
                                    switch (count) {
                                        case 0:
                                            jsonArg.label = data;
                                            jsonArg.value = data;
                                            break;
                                        case 1:
                                            jsonArg.id = data;
                                            break;
                                        case 2:
                                            jsonArg.desc = data;
                                            break;
                                        case 3:
                                            jsonArg.xparam1 = data;
                                            break;
                                        case 4:
                                            jsonArg.xparam2 = data;
                                            break;
                                        case 5:
                                            jsonArg.xparam3 = data;
                                            break
                                    }
                                    count++
                                });
                                return jsonArg
                            }))
                        }
                    })
                },
                search: function () {
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 0: break;
                            default:
                                $("#" + value).val(""); break;
                        } count++;
                    })
                    var term = extractLast(this.value);
                    if (term.length < 2) {
                        return false
                    }
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 1:
                                $("#" + value).val(ui.item.id);
                                break;
                            case 2:
                                $("#" + value).val(ui.item.desc);
                                break;
                            case 3:
                                $("#" + value).val(ui.item.xparam1);
                                break;
                            case 4:
                                $("#" + value).val(ui.item.xparam2);
                                break;
                            case 5:
                                $("#" + value).val(ui.item.xparam3);
                                break
                        }
                        count++
                        $("#TRNSPRTID").val(ui.item.id);
                    });
                    //alert($("#TRNSPRTID").val());
                    //$("#VHLNO").empty();
                    id = $("#TRNSPRTID").val();
                    vid = $("#VHLNO").val();
                    
                    return false
                },
                change: function (event, ui) {
                    //debugger;
                    var opt = $(this).val();
                    var crntval = event.currentTarget.value;
                    $.ajax({
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        url: $obj.data("autocomplete-url"),
                        data: "{'term':'" + crntval + "'}",
                        dataType: 'json',
                        success: function (data) {
                            //debugger;
                            console.log(data);
                            //alert(data); 
                            if (data.length == 0) {
                                // $(event.currentTarget).val('');
                                alert('Select item from the list.');
                                $("#TRNSPRTNAME").focus();
                                $("#TRNSPRTID").val("0");
                            }
                            else { }
                        },
                        error: function (data) {
                            $(event.currentTarget).val('');
                            console.log('Error retrieving options.');
                        }
                    });
                },
                messages: {
                    noResults: "",
                    results: ""
                }
            })
        }

        function add_autocomplete_vehicle($obj, controls) {
            var oldFn = $.ui.autocomplete.prototype._renderItem;
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp(this.term, "i");
                var t = item.label.replace(re, "<strong style='font-weight:bold;background:#C7DFFE;border-radius:2px;border:1px solid #98B8E1'>" + this.term + "</strong>");
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };

            $obj.autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: $obj.data("autocomplete-url"),
                        type: "POST",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                count = 0;
                                item_str = "";
                                var jsonArg = new Object();
                                count = 0;
                                $.each(item, function (i, data) {
                                    switch (count) {
                                        case 0:
                                            jsonArg.label = data;
                                            jsonArg.value = data;
                                            break;
                                        case 1:
                                            jsonArg.id = data;
                                            break;
                                        case 2:
                                            jsonArg.desc = data;
                                            break;
                                        case 3:
                                            jsonArg.xparam1 = data;
                                            break;
                                        case 4:
                                            jsonArg.xparam2 = data;
                                            break;
                                        case 5:
                                            jsonArg.xparam3 = data;
                                            break
                                    }
                                    count++
                                });
                                return jsonArg
                            }))
                        }
                    })
                },
                search: function () {
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 0: break;
                            default:
                                $("#" + value).val(""); break;
                        } count++;
                    })
                    var term = extractLast(this.value);
                    if (term.length < 2) {
                        return false
                    }
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 1:
                                $("#" + value).val(ui.item.id);
                                break;
                            case 2:
                                $("#" + value).val(ui.item.desc);
                                break;
                            case 3:
                                $("#" + value).val(ui.item.xparam1);
                                break;
                            case 4:
                                $("#" + value).val(ui.item.xparam2);
                                break;
                            case 5:
                                $("#" + value).val(ui.item.xparam3);
                                break
                        }
                        count++
                    });




                    return false
                },
                messages: {
                    noResults: "",
                    results: ""
                }
            })
        }

        function add_autocomplete_containerno($obj, controls) {
            var oldFn = $.ui.autocomplete.prototype._renderItem;
            $.ui.autocomplete.prototype._renderItem = function (ul, item) {
                var re = new RegExp(this.term, "i");
                var t = item.label.replace(re, "<strong style='font-weight:bold;background:#C7DFFE;border-radius:2px;border:1px solid #98B8E1'>" + this.term + "</strong>");
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>" + t + "</a>")
                    .appendTo(ul);
            };

            $obj.autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: $obj.data("autocomplete-url"),
                        type: "POST",
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response($.map(data, function (item) {
                                count = 0;
                                item_str = "";
                                var jsonArg = new Object();
                                count = 0;
                                $.each(item, function (i, data) {
                                    switch (count) {
                                        case 0:
                                            jsonArg.label = data;
                                            jsonArg.value = data;
                                            break;
                                        case 1:
                                            jsonArg.id = data;
                                            break;
                                        case 2:
                                            jsonArg.desc = data;
                                            break;
                                        case 3:
                                            jsonArg.xparam1 = data;
                                            break;
                                        case 4:
                                            jsonArg.xparam2 = data;
                                            break;
                                        case 5:
                                            jsonArg.xparam3 = data;
                                            break
                                    }
                                    count++
                                });
                                return jsonArg
                            }))
                        }
                    })
                },
                search: function () {
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 0: break;
                            default:
                                $("#" + value).val(""); break;
                        } count++;
                    })
                    var term = extractLast(this.value);
                    if (term.length < 2) {
                        return false
                    }
                },
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    count = 0;
                    $.each(controls.split(','), function (index, value) {
                        switch (count) {
                            case 1:
                                $("#" + value).val(ui.item.id);
                                break;
                            case 2:
                                $("#" + value).val(ui.item.desc);
                                break;
                            case 3:
                                $("#" + value).val(ui.item.xparam1);
                                break;
                            case 4:
                                $("#" + value).val(ui.item.xparam2);
                                break;
                            case 5:
                                $("#" + value).val(ui.item.xparam3);
                                break
                        }
                        count++
                        $("#GIDID").val(ui.item.id);
                    });

                    id = $("#GIDID").val();
                    if (id > 0) {
                        GetEsealGateinDetails(id);
                    }
                    return false
                },
                messages: {
                    noResults: "",
                    results: ""
                }
            })
        }

        $("#btnsave").click(function () {
            flag = true;
            if ($('#VTDATE').val() == "") {
                alert('Please Enter Date !!');
                flag = false;
                $('#VTDATE').focus();
            }
            else if ($('#VTTIME').val() == "") {
                alert('Please Enter Time !!');
                flag = false;
                $('#VTTIME').focus();
            }
            else if ($('#GIDID').val() == "" || $('#GIDID').val() == "0") {
                alert('Please Select Container No !!');
                flag = false;
                $('#GIDID').focus();
            }
            else if ($('#DRVNAME').val() == "") {
                alert('Please Enter Driver Name !!');
                flag = false;
                $('#DRVNAME').focus();
            }
            else if ($('#TRNSPRTNAME').val() == "") {
                alert('Please Enter Transpoter Name !!');
                flag = false;
                $('#TRNSPRTNAME').focus();
            }
            else if ($('#VHLNO').val() == "") {
                alert('Please Enter Vehicle No !!');
                flag = false;
                $('#VHLNO').focus();
            }
            else if ($('#VTSSEALNO').val() == "") {
                alert('Please Enter Vehicle Ticket Seal No !!');
                flag = false;
                $('#VTSSEALNO').focus();
            }
            if (flag) {
                if ($('#TRNSPRTID').val() == "") { $('#TRNSPRTID').val() == "0"; }
                if ($('#VHLMID').val() == "") { $('#VHLMID').val() == "0"; }

                var tab = ($("#Esealvtform").serialize());
                console.log(tab);
                $.ajax({
                    type: 'post',
                    url: '@Url.Action("SaveVehicleTicket", "ESealVehicleTicket")', // we are calling json method
                    data: tab,
                    success: function (data) {
                        if (data == "Exists") {
                            alert('Container number already exists ...!!');
                             var returnurl = '@Url.Action("Index", "ESealVehicleTicket")';
                                        window.location.href = returnurl;

                            @*$('<div></div>').dialog({
                                modal: true,
                                title: "Alert",
                                open: function () {
                                    var markup = '<b>Container number already exists ...!!<b>';
                                    $(this).delay(1200).fadeOut(1000);
                                    $(this).html(markup);
                                },
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                        var returnurl = '@Url.Action("Index", "ESealVehicleTicket")';
                                        window.location.href = returnurl;
                                    }
                                }
                            });*@

                        }
                        else if (data == "Success") {
                            alert('Saved Successfully !!');
                             var returnurl = '@Url.Action("Index", "ESealVehicleTicket")';
                                        window.location.href = returnurl;
                            @*$('<div></div>').dialog({
                                modal: true,
                                title: "Information",
                                open: function () {
                                    var markup = '<b>Saved Successfully !!<b>';
                                    $(this).delay(1200).fadeOut(1000);
                                    $(this).html(markup);
                                },
                                buttons: {
                                    Ok: function () {
                                        $(this).dialog("close");
                                        var returnurl = '@Url.Action("Index", "ESealVehicleTicket")';
                                        window.location.href = returnurl;
                                    }
                                }
                            });*@

                        }
                    },
                    error: function (ex) {
                        alert('Failed to save data');
                    }
                });
            }

        });

    </script>


}