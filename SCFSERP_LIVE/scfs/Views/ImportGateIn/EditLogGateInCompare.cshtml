@{
    ViewBag.Title = "Gate In - Edit log Compare";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var gid = (int)ViewBag.GIDNO;
    var verA = (string)ViewBag.VersionA;
    var verB = (string)ViewBag.VersionB;
    var rowsA = (IEnumerable<scfs_erp.Models.GateInDetailEditLogRow>)ViewBag.RowsA;
    var rowsB = (IEnumerable<scfs_erp.Models.GateInDetailEditLogRow>)ViewBag.RowsB;

    Func<scfs_erp.Models.GateInDetailEditLogRow, string> pickVal = r => string.IsNullOrEmpty(r.NewValue) ? (r.OldValue ?? "") : r.NewValue;

    // Build dictionaries keyed by field name for both versions
    var dictA = rowsA
        .GroupBy(r => r.FieldName)
        .ToDictionary(g => g.Key, g => pickVal(g.Last()));
    var dictB = rowsB
        .GroupBy(r => r.FieldName)
        .ToDictionary(g => g.Key, g => pickVal(g.Last()));

    var allFields = dictA.Keys.Union(dictB.Keys).OrderBy(k => k).ToList();
}

<style>
    .diff-yes { background: #fff3cd; }
    .diff-no { background: #e8f5e9; }
    .sticky th { position: sticky; top: 0; background: #2e3e4e; color: #fff; z-index: 2; }
    .nowrap { white-space: nowrap; }
    .filterbar { margin: 10px 0; }
    .old-badge { background: #f2dede; color: #a94442; border-radius: 3px; padding: 2px 6px; display: inline-block; }
    .new-badge { background: #dff0d8; color: #3c763d; border-radius: 3px; padding: 2px 6px; display: inline-block; }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h2 class="page-header">Gate In - Version Compare</h2>
            <p class="text-muted">
                Comparing <strong>GIDNO</strong> <code>@gid</code> between <strong>Version A</strong> <code>@verA</code> and <strong>Version B</strong> <code>@verB</code>.
            </p>
            <div class="btn-group">
                <a class="btn btn-default" href="@Url.Action("EditLogGateIn", "ImportGateIn", new { gidid = gid })"><i class="fa fa-arrow-left"></i> Back to Log</a>
            </div>
            <div class="filterbar">
                <label>Filter field:</label>
                <input type="text" id="fltField" class="form-control input-sm" style="display:inline-block; width:220px;" placeholder="Type to filter fields..." />
                <label class="checkbox-inline" style="margin-left:10px;"><input type="checkbox" id="onlyDiff" /> Show only differences</label>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                <table id="cmpTable" class="table table-bordered table-striped sticky">
                    <thead>
                        <tr>
                            <th class="nowrap">Field</th>
                            <th class="nowrap">Old Value (Version @verA)</th>
                            <th class="nowrap">New Value (Version @verB)</th>
                            <th class="nowrap">Different?</th>
                        </tr>
                        <tr>
                            <th><input type="text" id="fltField2" class="form-control input-sm" placeholder="Field" /></th>
                            <th><input type="text" id="fltOld" class="form-control input-sm" placeholder="Old value" /></th>
                            <th><input type="text" id="fltNew" class="form-control input-sm" placeholder="New value" /></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var f in allFields)
                    {
                        var va = dictA.ContainsKey(f) ? dictA[f] : "";
                        var vb = dictB.ContainsKey(f) ? dictB[f] : "";
                        bool diff = (va ?? "") != (vb ?? "");
                        <tr class="row-item @(diff ? "diff-yes" : "diff-no")" data-field="@f" data-diff="@(diff ? "1" : "0")">
                            <td class="field-name">@f</td>
                            <td><span class="old-badge">@Html.Raw(HttpUtility.HtmlEncode(va))</span></td>
                            <td><span class="new-badge">@Html.Raw(HttpUtility.HtmlEncode(vb))</span></td>
                            <td class="nowrap">@(diff ? "Yes" : "No")</td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
<script>
    (function(){
        function applyFilters(){
            var q = ($('#fltField').val() || '').toLowerCase();
            var onlyDiff = $('#onlyDiff').prop('checked');
            var q2 = ($('#fltField2').val() || '').toLowerCase();
            var qo = ($('#fltOld').val() || '').toLowerCase();
            var qn = ($('#fltNew').val() || '').toLowerCase();
            $('#cmpTable tbody tr').each(function(){
                var $tr = $(this);
                var fname = ($tr.data('field') + '').toLowerCase();
                var isDiff = $tr.data('diff') === 1 || $tr.data('diff') === '1';
                var textOld = ($tr.find('td:nth-child(2)').text() || '').toLowerCase();
                var textNew = ($tr.find('td:nth-child(3)').text() || '').toLowerCase();
                var matchField = (!q && !q2) || fname.indexOf(q) !== -1 || fname.indexOf(q2) !== -1;
                var matchOld = !qo || textOld.indexOf(qo) !== -1;
                var matchNew = !qn || textNew.indexOf(qn) !== -1;
                var match = matchField && matchOld && matchNew;
                if (match && (!onlyDiff || isDiff)) {
                    $tr.show();
                } else {
                    $tr.hide();
                }
            });
        }
        $('#fltField').on('keyup change', applyFilters);
        $('#fltField2').on('keyup change', applyFilters);
        $('#fltOld').on('keyup change', applyFilters);
        $('#fltNew').on('keyup change', applyFilters);
        $('#onlyDiff').on('change', applyFilters);
    })();
</script>
}
