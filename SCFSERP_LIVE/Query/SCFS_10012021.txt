
1.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[PR_ACCOUNTINGYEAR_ID_CHK]    Script Date: 10/01/2021 00:23:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[PR_ACCOUNTINGYEAR_ID_CHK] @PFYear INT, @PTYear INT AS

SET NOCOUNT ON

SELECT AccountingYear.YRID, AccountingYear.YRDESC, * FROM AccountingYear
WHERE Year(FDate)=@PFYear AND Year(TDate)=@PTYear


2.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_Import_Invoice]    Script Date: 10/01/2021 00:24:55 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Search_Import_Invoice]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT
		,@PTRANBTYPE int
		,@PREGSTRID int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LTRANBTYPE int,@LREGSTRID int,@LSDate Smalldatetime, @LEDate Smalldatetime
set @LCompyId = @PCompyId
set @LTRANBTYPE=@PTRANBTYPE
set @LREGSTRID=@PREGSTRID
set @LSDate = @PSDate
set @LEDate = @PEDate

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
    , TRANTIME datetime
    , TRANDNO  VARCHAR(25)
    , TRANNO  int
    , TRANREFNAME VARCHAR(100)
	, NOC int
	, TRANNAMT numeric(18,2)
	,DISPSTATUS smallint
	,GSTAMT smallint
	, TRANMID INT
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,DISPSTATUS, GSTAMT,TRANMID, RowNum)
  
    SELECT   TRANDATE, TRANTIME,  
   TRANDNO, TRANNO,isnull(TRANCSNAME, TRANREFNAME),0,TRANNAMT,DISPSTATUS, 0, TRANMID

            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				
			  			  WHEN 2 then TRANDNO
					      WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			  
			  		    WHEN 2 then TRANDNO
					     WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 then TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 then TRANTIME
                END
            END DESC
            
            ) AS RowNum
            
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1) AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
              OR TRANTIME LIKE @FilterTerm
              OR TRANDNO  LIKE @FilterTerm
              OR TRANNO    LIKE @FilterTerm
              oR isnull(TRANCSNAME, TRANREFNAME) LIKE @FilterTerm
              OR TRANNAMT    LIKE @FilterTerm
             )
			   
            
    SELECT TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,
	      case DISPSTATUS when 0 then '' when 1 then 'C' end as DISPSTATUS, GSTAMT, TRANMID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANNO DESC 

SELECT    @TotalRowsCount = COUNT(*)
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1)

    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END


3.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[PR_COMPANYACCOUNTINGDETAIL_ID_CHK]    Script Date: 10/01/2021 00:30:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[PR_COMPANYACCOUNTINGDETAIL_ID_CHK] @PCompId Int,@PYrId Int AS

SET NOCOUNT ON

SELECT CompanyAccountingDetail.COMPYID, CompanyAccountingDetail.COMPID, CompanyAccountingDetail.YRID
FROM CompanyAccountingDetail
WHERE CompanyAccountingDetail.COMPID=@PCompId AND CompanyAccountingDetail.YRID=@PYrId

4.

USE [SCFS]
GO

/****** Object:  View [dbo].[VW_ACCOUNTING_YEAR_DETAIL_ASSGN]    Script Date: 10/01/2021 00:47:01 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[VW_ACCOUNTING_YEAR_DETAIL_ASSGN]
AS
SELECT     TOP (100) PERCENT dbo.COMPANYACCOUNTINGDETAIL.COMPYID, dbo.ACCOUNTINGYEAR.FDATE, dbo.ACCOUNTINGYEAR.TDATE, 
                      dbo.ACCOUNTINGYEAR.YRDESC
FROM         dbo.ACCOUNTINGYEAR INNER JOIN
                      dbo.COMPANYACCOUNTINGDETAIL ON dbo.ACCOUNTINGYEAR.YRID = dbo.COMPANYACCOUNTINGDETAIL.YRID
WHERE     (dbo.COMPANYACCOUNTINGDETAIL.COMPYID = 10)
ORDER BY dbo.ACCOUNTINGYEAR.TDATE DESC

GO




5.


USE [sCFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_USER_MENU_DETAIL_ASSGN]    Script Date: 10/01/2021 00:50:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[pr_USER_MENU_DETAIL_ASSGN] @PKUSRID AS  VARCHAR(100) 

AS

SET NOCOUNT ON

delete from MenuRoleMaster WHERE Roles = @PKUSRID 

INSERT INTO MenuRoleMaster(LinkText, ActionName, ControllerName, Roles, MenuGId, MenuGIndex)
SELECT    dbo.AspNetRoles.RMenuType, dbo.AspNetRoles.RMenuIndex, dbo.AspNetRoles.RControllerName, dbo.AspNetUsers.UserName, 
                      dbo.AspNetRoles.RMenuGroupId, dbo.AspNetRoles.RMenuGroupOrder
FROM         dbo.AspNetUsers INNER JOIN
                      dbo.AspNetUserRoles ON dbo.AspNetUsers.Id = dbo.AspNetUserRoles.UserId INNER JOIN
                      dbo.AspNetRoles ON dbo.AspNetUserRoles.RoleId = dbo.AspNetRoles.Id INNER JOIN
                      dbo.ApplicationUserGroups ON dbo.AspNetUsers.Id = dbo.ApplicationUserGroups.UserId INNER JOIN
                      dbo.Groups ON dbo.ApplicationUserGroups.GroupId = dbo.Groups.Id
GROUP BY dbo.AspNetUsers.UserName, dbo.AspNetRoles.RMenuType, dbo.AspNetRoles.RMenuIndex, dbo.AspNetRoles.RControllerName, dbo.AspNetRoles.RMenuGroupId, 
                      dbo.AspNetRoles.RMenuGroupOrder
HAVING      (dbo.AspNetUsers.UserName = @PKUSRID) AND (dbo.AspNetRoles.RMenuType IS NOT NULL)
ORDER BY dbo.AspNetRoles.RMenuGroupId, dbo.AspNetRoles.RMenuGroupOrder


6.


USE [SCFS]
GO
/****** Object:  Table [dbo].[EXPORT_INVOICE_REGISTER]    Script Date: 10/01/2021 00:58:24 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EXPORT_INVOICE_REGISTER](
	[REGSTRID] [int] NOT NULL,
	[REGSTRDESC] [varchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[REGSTRID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (1, N'CUSTOMER')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (2, N'NOTIONAL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (6, N'ZERO BILL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (16, N'CUSTOMER')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (17, N'NOTIONAL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (18, N'ZERO BILL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (31, N'CUSTOMER')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (32, N'NOTOINAL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (33, N'ZERO BILL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (46, N'CUSTOMER')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (47, N'NOTIONAL')
GO
INSERT [dbo].[EXPORT_INVOICE_REGISTER] ([REGSTRID], [REGSTRDESC]) VALUES (48, N'ZERO BILL')
GO



7.


USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_OutsideDestuff]    Script Date: 10/01/2021 01:08:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

create PROCEDURE [dbo].[pr_Search_OutsideDestuff]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT,@PREGSTRID int,@PTRANBTYPE int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LSDate Smalldatetime, @LEDate Smalldatetime,@LREGSTRID int,@LTRANBTYPE int
set @LCompyId = @PCompyId
set @LSDate = @PSDate
set @LEDate = @PEDate
set @LREGSTRID=@PREGSTRID
set @LTRANBTYPE=@PTRANBTYPE

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
	  ,TRANTIME SMALLDATETIME
    , TRANDNO VARCHAR(50)
    , TRANREFNAME  VARCHAR(100)
	, TRANNAMT NUMERIC(18,2) 
	, TRANMID int
	,GSTAMT smallint
	, DISPSTATUS int
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE,TRANTIME, TRANDNO, TRANREFNAME, TRANNAMT, TRANMID, GSTAMT, DISPSTATUS, RowNum)
  
    SELECT TRANDATE,TRANTIME, TRANDNO, TRANREFNAME, TRANNAMT, TRANMID, 0, DISPSTATUS
            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				  WHEN 2 then TRANDNO
			  			  WHEN 3 then TRANREFNAME
			  			  WHEN 4 then TRANREFNO
						  
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			    WHEN 2 then TRANDNO
			  		    WHEN 3 then TRANREFNAME
			  			WHEN 4 then TRANREFNO
						
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 THEN TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 THEN TRANTIME
                END
            END DESC
			/*,
			  CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				  WHEN 6 then TRANNAMT
			  			 
						  
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			    WHEN 6 then TRANNAMT
                    END
               END DESC*/
            
            ) AS RowNum
            
FROM TRANSACTIONMASTER
WHERE   (COMPYID = @LCompyId) and (REGSTRID=@LREGSTRID) AND (TRANBTYPE=@LTRANBTYPE) AND
(TRANDATE BETWEEN @PSDate AND @PEDate)  AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
			  OR TRANTIME LIKE @FilterTerm
              OR TRANDNO LIKE @FilterTerm
              OR TRANREFNAME  LIKE @FilterTerm
			  OR TRANNAMT LIKE @FilterTerm)
			   
ORDER BY TRANDNO
            
    SELECT TRANDATE,TRANTIME, TRANDNO, TRANREFNAME, TRANNAMT, TRANMID, 
	CASE DISPSTATUS WHEN 1 THEN 'C' WHEN 2 THEN 'RETURN' else '' end as DISPSTATUS, GSTAMT
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANDNO DESC

SELECT    @TotalRowsCount = COUNT(*)
FROM  TRANSACTIONMASTER
WHERE (COMPYID = @LCompyId) and (REGSTRID=@LREGSTRID)AND (TRANBTYPE=@LTRANBTYPE) AND(TRANDATE BETWEEN @LSDate AND @LEDate)
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END



8.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[ETransaction_Update_Assgn]    Script Date: 11/01/2021 00:03:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[pr_IRN_Transaction_Update_Assgn] @PTranMID int, @PIRNNO varchar(10), @PACKNO varchar(50),
@PACKDT DATETIME
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update TRANSACTIONMASTER Set
	IRNNO = @PIRNNO,
	ACKNO = @PACKNO,
	ACKDT = @PACKDT
	Where TRANMID = @PTranMID


END


9.


https://my.gstzen.in/jdhwmhsdtr/a/invoices/70f0140c-70cc-4b32-9e8d-7eed86e38963/einvoice/qrcode/.png/


10.


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

alter PROCEDURE pr_EInvoice_Import_Transaction_Detail_Assgn @PTranMID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DECLARE @TableMaster TABLE
    ( 
	   PrdDesc  varchar(50),
	   HsnCd varchar(15),
	   Qty int,
	   UnitCode varchar(15),
	   UnitPrice numeric(18,2),
	   TotAmt  numeric(18,2),
	   AssAmt numeric(18,2),
	   GstRt numeric(18,2),
	   IgstAmt numeric(18,2),
	   CgstAmt numeric(18,2),
	   SgstAmt numeric(18,2),
	   TotItemVal numeric(18,2)	


    )

	Insert into @TableMaster(PrdDesc, HsnCd, Qty, UnitCode, UnitPrice, TotAmt, AssAmt, GstRt, IgstAmt, CgstAmt, SgstAmt, TotItemVal)
	Select 'Storage Charges',STRG_HSNCODE, 1, 'Nos', STRG_TAXABLE_AMT, STRG_TAXABLE_AMT, STRG_TAXABLE_AMT, 18, STRG_IGST_AMT, STRG_CGST_AMT,
	STRG_SGST_AMT, STRG_TAXABLE_AMT + STRG_IGST_AMT + STRG_CGST_AMT + STRG_SGST_AMT  
	from Z_IMPORT_EINVOICE_DETAILS Where STRG_TAXABLE_AMT > 0 And TRANMID = @PTranMID

	Insert into @TableMaster(PrdDesc, HsnCd, Qty, UnitCode, UnitPrice, TotAmt, AssAmt, GstRt, IgstAmt, CgstAmt, SgstAmt, TotItemVal)
	Select 'Handling Charges',HANDL_HSNCODE, 1, 'Nos', HANDL_TAXABLE_AMT, HANDL_TAXABLE_AMT, HANDL_TAXABLE_AMT, 18, HANDL_IGST_AMT, HANDL_CGST_AMT,
	HANDL_SGST_AMT, HANDL_TAXABLE_AMT + HANDL_IGST_AMT + HANDL_SGST_AMT + HANDL_SGST_AMT  
	from Z_IMPORT_EINVOICE_DETAILS Where HANDL_TAXABLE_AMT > 0 And TRANMID = @PTranMID

	Select * From @TableMaster

END
GO


11.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_Import_Invoice]    Script Date: 11/01/2021 12:49:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Search_Import_Invoice]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT
		,@PTRANBTYPE int
		,@PREGSTRID int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LTRANBTYPE int,@LREGSTRID int,@LSDate Smalldatetime, @LEDate Smalldatetime
set @LCompyId = @PCompyId
set @LTRANBTYPE=@PTRANBTYPE
set @LREGSTRID=@PREGSTRID
set @LSDate = @PSDate
set @LEDate = @PEDate

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
    , TRANTIME datetime
    , TRANDNO  VARCHAR(25)
    , TRANNO  int
    , TRANREFNAME VARCHAR(100)
	, NOC int
	, TRANNAMT numeric(18,2)
	,DISPSTATUS smallint
	,GSTAMT smallint
	, TRANMID INT
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,DISPSTATUS, GSTAMT,TRANMID, RowNum)
  
    SELECT   TRANDATE, TRANTIME,  
   TRANDNO, TRANNO,isnull(TRANCSNAME, TRANREFNAME),0,TRANNAMT,DISPSTATUS, (CASE WHEN len(IRNNO) > 0 THEN 1 ELSE 0 END), TRANMID

            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				
			  			  WHEN 2 then TRANDNO
					      WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			  
			  		    WHEN 2 then TRANDNO
					     WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 then TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 then TRANTIME
                END
            END DESC
            
            ) AS RowNum
            
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1) AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
              OR TRANTIME LIKE @FilterTerm
              OR TRANDNO  LIKE @FilterTerm
              OR TRANNO    LIKE @FilterTerm
              oR isnull(TRANCSNAME, TRANREFNAME) LIKE @FilterTerm
              OR TRANNAMT    LIKE @FilterTerm
             )
			   
            
    SELECT TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,
	      case DISPSTATUS when 0 then '' when 1 then 'C' end as DISPSTATUS, GSTAMT, TRANMID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANNO DESC 

SELECT    @TotalRowsCount = COUNT(*)
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1)

    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END


12.


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE pr_Transaction_QrCode_Path_Update_Assgn @PTranMID int, @PPath varchar(max)
AS
BEGIN

	SET NOCOUNT ON;

	Update TRANSACTIONMASTER Set QRCODEPATH = @PPath Where TRANMID = @PTranMID

END
GO


13.

USE [SCFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_IRN_Transaction_Update_Assgn]    Script Date: 12/01/2021 19:00:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_IRN_Transaction_Update_Assgn] @PTranMID int, @PIRNNO varchar(100), @PACKNO varchar(50),
@PACKDT DATETIME
AS
BEGIN

	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Update TRANSACTIONMASTER Set
	IRNNO = @PIRNNO,
	ACKNO = @PACKNO,
	ACKDT = @PACKDT
	Where TRANMID = @PTranMID


END

