
TABLES
------

1. SLABTYPEMASTER
   --------------


HSNID	int	Unchecked


2. EXPORTSLABTYPEMASTER
   --------------------

HSNID	int	Unchecked


3. TRANSACTIONMASTER
   -----------------

STRG_HSNCODE	varchar(10)	Checked
HANDL_HSNCODE	varchar(10)	Checked
STRG_TAXABLE_AMT	numeric(18, 2)	Checked
HANDL_TAXABLE_AMT	numeric(18, 2)	Checked
STRG_CGST_EXPRN	numeric(18, 2)	Checked
STRG_SGST_EXPRN	numeric(18, 2)	Checked
STRG_IGST_EXPRN	numeric(18, 2)	Checked
STRG_CGST_AMT	numeric(18, 2)	Checked
STRG_SGST_AMT	numeric(18, 2)	Checked
STRG_IGST_AMT	numeric(18, 2)	Checked
HANDL_CGST_EXPRN	numeric(18, 2)	Checked
HANDL_SGST_EXPRN	numeric(18, 2)	Checked
HANDL_IGST_EXPRN	numeric(18, 2)	Checked
HANDL_CGST_AMT	numeric(18, 2)	Checked
HANDL_SGST_AMT	numeric(18, 2)	Checked
HANDL_IGST_AMT	numeric(18, 2)	Checked
TRANCGSTAMT	numeric(18, 2)	Checked
TRANSGSTAMT	numeric(18, 2)	Checked
TRANIGSTAMT	numeric(18, 2)	Checked
TRANBILLREFNO	varchar(20)	Checked




PROCEDURE
---------

1.

USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_SearchExportSlabTypeMaster]    Script Date: 02/07/2017 15:43:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

DECLARE @total INT
        @filtered INT

EXEC [dbo].[pr_SearchPerson] NULL, 1, 'ASC', 1, 10, @TotalRowsCount= @total OUTPUT,@FilteredRowsCount= @filtered OUTPUT

SELECT @total, @filtered
*/

ALTER PROCEDURE [dbo].[pr_SearchExportSlabTypeMaster]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
 
AS BEGIN
    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'

    DECLARE @TableMaster TABLE
    ( 
	SLABTCODE VARCHAR(100)
      ,SLABTDESC VARCHAR(100)
	  ,HSNCODE VARCHAR(100)
	  ,DISPSTATUS smallint
	  , SLABTID int 
      , RowNum INT
    )

    INSERT INTO @TableMaster(SLABTCODE,
SLABTDESC,HSNCODE,DISPSTATUS,SLABTID, RowNum)
    SELECT  SLABTCODE
            , SLABTDESC,HSNCODE,EXPORTSLABTYPEMASTER.DISPSTATUS
            , SLABTID
            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                CASE @SortIndex
                  WHEN 0 THEN SLABTCODE
                  WHEN 1 THEN SLABTDESC
	 
                END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN SLABTCODE
                  WHEN 1 THEN SLABTDESC				
               
                END
            END DESC 
            
            /*DATETIME ORDER BY*/
             

            
            ) AS RowNum
    FROM            dbo.EXPORTSLABTYPEMASTER LEFT OUTER JOIN
                         dbo.HSNCODEMASTER ON dbo.EXPORTSLABTYPEMASTER.HSNID = dbo.HSNCODEMASTER.HSNID  /* CHANGE  TABLE NAME */
    WHERE   @FilterTerm IS NULL 
              OR SLABTCODE LIKE @FilterTerm
              OR SLABTDESC LIKE @FilterTerm
              OR HSNCODE LIKE @FilterTerm

    SELECT SLABTCODE
            , SLABTDESC
			,HSNCODE
			,
			  CASE DISPSTATUS WHEN 1 THEN 'Disabled' WHEN 0 THEN 'Enabled' END  AS DISPSTATUS
			 ,SLABTID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    
    SELECT @TotalRowsCount = COUNT(*)
    FROM   dbo.EXPORTSLABTYPEMASTER   /* CHANGE  TABLE NAME */
    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END


2.


USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_SearchImportSlabType]    Script Date: 02/07/2017 15:43:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

DECLARE @total INT
        @filtered INT

EXEC [dbo].[pr_SearchPerson] NULL, 1, 'ASC', 1, 10, @TotalRowsCount= @total OUTPUT,@FilteredRowsCount= @filtered OUTPUT

SELECT @total, @filtered
*/

ALTER PROCEDURE [dbo].[pr_SearchImportSlabType]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
 
AS BEGIN
    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'

    DECLARE @TableMaster TABLE
    ( 
	SLABTCODE VARCHAR(100)
      ,SLABTDESC VARCHAR(100)
	  ,HSNCODE VARCHAR(100)
	  ,DISPSTATUS smallint
	  , SLABTID int 
      , RowNum INT
    )

    INSERT INTO @TableMaster(SLABTCODE,
SLABTDESC, HSNCODE, DISPSTATUS,SLABTID, RowNum)
    SELECT  SLABTCODE
            , SLABTDESC,HSNCODE,SLABTYPEMASTER.DISPSTATUS
            , SLABTID
            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                CASE @SortIndex
                  WHEN 0 THEN SLABTCODE
                  WHEN 1 THEN SLABTDESC
	 
                END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN SLABTCODE
                  WHEN 1 THEN SLABTDESC				
               
                END
            END DESC 
            
            /*DATETIME ORDER BY*/
             

            
            ) AS RowNum
    FROM            dbo.SLABTYPEMASTER LEFT OUTER JOIN
                         dbo.HSNCODEMASTER ON dbo.SLABTYPEMASTER.HSNID = dbo.HSNCODEMASTER.HSNID /* CHANGE  TABLE NAME */
    WHERE   @FilterTerm IS NULL 
              OR SLABTCODE LIKE @FilterTerm
              OR SLABTDESC LIKE @FilterTerm
              OR HSNCODE LIKE @FilterTerm

    SELECT SLABTCODE
            , SLABTDESC
			,HSNCODE
			,
			  CASE DISPSTATUS WHEN 1 THEN 'Disabled' WHEN 0 THEN 'Enabled' END  AS DISPSTATUS
			 ,SLABTID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    
    SELECT @TotalRowsCount = COUNT(*)
    FROM   dbo.SLABTYPEMASTER  /* CHANGE  TABLE NAME */
    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END


3.

USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Import_Invoice_IGMNO_Grid_Assgn]    Script Date: 03/07/2017 17:15:01 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[pr_Import_Invoice_IGMNO_Grid_Assgn]  /* CHANGE */
		@PIGMNO varchar(25), @PLNO varchar(10), @PTRANMID INT
 
AS BEGIN

    DECLARE @TableMaster TABLE
    ( 
	  TRANREFID INT
	  ,TRANREFNAME VARCHAR(100)
	  ,BOENO VARCHAR(25)
	  ,BILLEMID INT
	  ,BILLEDID INT 
	  ,GIDID INT
	  ,STMRID INT
	  ,STMRNAME VARCHAR(100)
	  ,IGMNO VARCHAR(25)
	  ,GPLNO VARCHAR(10)
	  ,CONTNRNO  VARCHAR(15)
	  ,CONTNRSDESC VARCHAR(5)
	  ,CONTNRSID INT
	  ,GIDATE SMALLDATETIME 
	  ,STRGDATE SMALLDATETIME 
	  ,GODATE SMALLDATETIME
	  ,GOTIME DATETIME
	  ,DODATE SMALLDATETIME
	  ,NOD	NUMERIC(18,2)
	  ,WGHT 	NUMERIC(18,4)
	  ,PRDTGID INT
	  ,TRANDID INT
	  ,TRANDOTYPE SMALLINT
	  ,TARIFFMID INT
	  ,DPAIDNO VARCHAR(50)
	  ,DPAIDAMT NUMERIC(18, 2)
	  ,GPEAMT NUMERIC(18, 2)
	  ,GPAAMT  NUMERIC(18, 2)
	  ,TRANDSAMT NUMERIC(18,2)
	  ,TRANDHAMT NUMERIC(18,2)
	  ,TRANDEAMT NUMERIC(18,2)
	  ,TRANDFAMT NUMERIC(18,2)
	  ,TRANDAAMT NUMERIC(18,2)
	  ,TRANDNAMT NUMERIC(18,2)
	  ,RCOL1  NUMERIC(18,2)
	  ,RCOL2  NUMERIC(18,2)
	  ,RCOL3  NUMERIC(18,2)
	  ,RCOL4  NUMERIC(18,2)
	  ,RCOL5  NUMERIC(18,2)
	  ,RCOL6  NUMERIC(18,2)
	  ,RCOL7  NUMERIC(18,2)
	  ,RAMT1  NUMERIC(18,2)
	  ,RAMT2  NUMERIC(18,2)
	  ,RAMT3  NUMERIC(18,2)
	  ,RAMT4  NUMERIC(18,2)
	  ,RAMT5  NUMERIC(18,2)
	  ,RAMT6  NUMERIC(18,2)
	  ,RAMT7  NUMERIC(18,2)
	  ,RCAMT1  NUMERIC(18,2)
	  ,RCAMT2  NUMERIC(18,2)
	  ,RCAMT3  NUMERIC(18,2)
	  ,RCAMT4  NUMERIC(18,2)
	  ,RCAMT5  NUMERIC(18,2)
	  ,RCAMT6  NUMERIC(18,2)
	  ,RCAMT7  NUMERIC(18,2)
	   ,GPETYPE smallint
	  ,GPSTYPE smallint
	  ,GPWTYPE smallint
	  ,GPSCNTYPE smallint
	   ,TRANDRATE  NUMERIC(18,2)
	   , STATETYPE smallint
	   , STRG_HSN_CODE VARCHAR(10)
	   , HANDL_HSN_CODE VARCHAR(10)
	   ,STRG_TAXABLE_AMT  NUMERIC(18,2)
	   ,HANDL_TAXABLE_AMT  NUMERIC(18,2)
	   ,STRG_CGST_EXPRN  NUMERIC(18,2)
	   ,STRG_SGST_EXPRN  NUMERIC(18,2)
	   ,STRG_IGST_EXPRN  NUMERIC(18,2)
	   ,STRG_CGST_AMT  NUMERIC(18,2)
	   ,STRG_SGST_AMT  NUMERIC(18,2)
	   ,STRG_IGST_AMT  NUMERIC(18,2)
	   ,HANDL_CGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_SGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_IGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_CGST_AMT  NUMERIC(18,2)
	   ,HANDL_SGST_AMT  NUMERIC(18,2)
	   ,HANDL_IGST_AMT  NUMERIC(18,2)
	   ,TRANCGSTAMT  NUMERIC(18,2)
	   ,TRANSGSTAMT  NUMERIC(18,2)
	   ,TRANIGSTAMT  NUMERIC(18,2)
    )


		   
DECLARE @LIGMNO varchar(25), @LLNO varchar(10), @LTRANMID INT
set @LIGMNO =@PIGMNO
set @LLNO = @PLNO
set @LTRANMID = @PTRANMID
set nocount on

--PENDING BOE CONTAINER NO
--isnull(dbo.GATEOUTDETAIL.GODATE,@LEDATE)



IF @LTRANMID  = 0  

	INSERT INTO @TableMaster(TRANREFID,TRANREFNAME,BOENO,BILLEMID,BILLEDID,GIDID,STMRID,STMRNAME,IGMNO,GPLNO,CONTNRNO,CONTNRSDESC,CONTNRSID,GIDATE,
	STRGDATE,GODATE,GOTIME,DODATE,NOD,WGHT,PRDTGID,TRANDID,TRANDOTYPE,TARIFFMID,DPAIDNO,DPAIDAMT,GPEAMT,GPAAMT,TRANDSAMT,TRANDHAMT,
	TRANDEAMT,TRANDFAMT,TRANDAAMT,TRANDNAMT,RCOL1,RCOL2,RCOL3,RCOL4,RCOL5,RCOL6,RCOL7,RAMT1,RAMT2,RAMT3,RAMT4,RAMT5,RAMT6,RAMT7,RCAMT1,RCAMT2,
	RCAMT3,RCAMT4,RCAMT5,RCAMT6,RCAMT7,GPETYPE,GPSTYPE,GPWTYPE,GPSCNTYPE,TRANDRATE, STATETYPE, STRG_HSN_CODE, HANDL_HSN_CODE ,STRG_TAXABLE_AMT,
	HANDL_TAXABLE_AMT,STRG_CGST_EXPRN,STRG_SGST_EXPRN,STRG_IGST_EXPRN,STRG_CGST_AMT,STRG_SGST_AMT,
	STRG_IGST_AMT,HANDL_CGST_EXPRN,HANDL_SGST_EXPRN,HANDL_IGST_EXPRN,HANDL_CGST_AMT,HANDL_SGST_AMT,
	HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT)
	
	SELECT DISTINCT 
						  TOP (100) PERCENT dbo.OPENSHEETMASTER.CHAID, dbo.OPENSHEETMASTER.OSMNAME, dbo.BILLENTRYMASTER.BILLEMDNO, dbo.BILLENTRYMASTER.BILLEMID,dbo.BILLENTRYDETAIL.BILLEDID,
						   dbo.BILLENTRYDETAIL.GIDID, dbo.GATEINDETAIL.STMRID,GATEINDETAIL.STMRNAME, dbo.GATEINDETAIL.IGMNO, dbo.GATEINDETAIL.GPLNO, dbo.GATEINDETAIL.CONTNRNO, 
						  dbo.CONTAINERSIZEMASTER.CONTNRSDESC, dbo.GATEINDETAIL.CONTNRSID, dbo.GATEINDETAIL.GIDATE, 
						  dbo.VW_BOE_NOT_BILL_MAX_GIDATE_ASSGN.XGIDATE AS STRGDATE, dbo.GATEOUTDETAIL.GODATE, dbo.GATEOUTDETAIL.GOTIME, 
						  dbo.OPENSHEETMASTER.DODATE, 0 AS NOD, dbo.GATEINDETAIL.GPWGHT, dbo.GATEINDETAIL.PRDTGID, 0 AS TRANDID, 0 AS TRANDOTYPE, 0 AS TARIFFMID, 
						  dbo.BILLENTRYMASTER.DPAIDNO, dbo.BILLENTRYMASTER.DPAIDAMT, dbo.GATEINDETAIL.GPEAMT, dbo.GATEINDETAIL.GPAAMT,
						  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,GPETYPE,GPSTYPE,GPWTYPE,GPSCNTYPE,0, isnull(STATETYPE,0),
						  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	FROM         dbo.OPENSHEETMASTER INNER JOIN
						  dbo.BILLENTRYMASTER INNER JOIN
						  dbo.BILLENTRYDETAIL ON dbo.BILLENTRYMASTER.BILLEMID = dbo.BILLENTRYDETAIL.BILLEMID INNER JOIN
						  dbo.GATEINDETAIL ON dbo.BILLENTRYDETAIL.GIDID = dbo.GATEINDETAIL.GIDID INNER JOIN
						  dbo.CONTAINERSIZEMASTER ON dbo.GATEINDETAIL.CONTNRSID = dbo.CONTAINERSIZEMASTER.CONTNRSID INNER JOIN
						  dbo.VW_BOE_NOT_BILL_MAX_GIDATE_ASSGN ON dbo.BILLENTRYMASTER.BILLEMID = dbo.VW_BOE_NOT_BILL_MAX_GIDATE_ASSGN.BILLEMID INNER JOIN
						  dbo.OPENSHEETDETAIL ON dbo.GATEINDETAIL.GIDID = dbo.OPENSHEETDETAIL.GIDID ON 
						  dbo.OPENSHEETMASTER.OSMID = dbo.OPENSHEETDETAIL.OSMID LEFT OUTER JOIN
						  dbo.GATEOUTDETAIL ON dbo.GATEINDETAIL.GIDID = dbo.GATEOUTDETAIL.GIDID LEFT OUTER JOIN
						  dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01 ON 
						  dbo.BILLENTRYDETAIL.BILLEDID = dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.BILLEDID INNER JOIN
                         dbo.CATEGORYMASTER ON dbo.OPENSHEETMASTER.CHAID = dbo.CATEGORYMASTER.CATEID LEFT OUTER JOIN
                         dbo.STATEMASTER ON dbo.CATEGORYMASTER.STATEID = dbo.STATEMASTER.STATEID
	WHERE     (ISNULL(dbo.VW_IMPORT_INVOICE_BOE_CONTAINER_NO_CBX_ASSGN_01.TRANDID, 0) = 0) AND (dbo.BILLENTRYMASTER.SDPTID = 1) AND 
						  (dbo.GATEINDETAIL.IGMNO = @LIGMNO) AND (dbo.GATEINDETAIL.GPLNO = @LLNO)

ELSE
                      
--ACTUAL STUFF INVOICE DETAIL

	INSERT INTO @TableMaster(TRANREFID,TRANREFNAME,BOENO,BILLEMID,BILLEDID,GIDID,STMRID,STMRNAME,IGMNO,GPLNO,CONTNRNO,CONTNRSDESC,CONTNRSID,GIDATE,
	STRGDATE,GODATE,GOTIME,DODATE,NOD,WGHT,PRDTGID,TRANDID,TRANDOTYPE,TARIFFMID,DPAIDNO,DPAIDAMT,GPEAMT,GPAAMT,TRANDSAMT,TRANDHAMT,
	TRANDEAMT,TRANDFAMT,TRANDAAMT,TRANDNAMT,RCOL1,RCOL2,RCOL3,RCOL4,RCOL5,RCOL6,RCOL7,RAMT1,RAMT2,RAMT3,RAMT4,RAMT5,RAMT6,RAMT7,RCAMT1,RCAMT2,
	RCAMT3,RCAMT4,RCAMT5,RCAMT6,RCAMT7,GPETYPE,GPSTYPE,GPWTYPE,GPSCNTYPE,TRANDRATE, STATETYPE, STRG_HSN_CODE, HANDL_HSN_CODE ,STRG_TAXABLE_AMT,
	HANDL_TAXABLE_AMT,STRG_CGST_EXPRN,STRG_SGST_EXPRN,STRG_IGST_EXPRN,STRG_CGST_AMT,STRG_SGST_AMT,
	STRG_IGST_AMT,HANDL_CGST_EXPRN,HANDL_SGST_EXPRN,HANDL_IGST_EXPRN,HANDL_CGST_AMT,HANDL_SGST_AMT,
	HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT)


	SELECT     dbo.TRANSACTIONMASTER.TRANREFID, dbo.TRANSACTIONMASTER.TRANREFNAME, dbo.TRANSACTIONDETAIL.TRANDREFNO AS BOENO, 
						  dbo.BILLENTRYMASTER.BILLEMID,dbo.TRANSACTIONDETAIL.BILLEDID, dbo.TRANSACTIONDETAIL.TRANDREFID AS GIDID, dbo.GATEINDETAIL.STMRID,GATEINDETAIL.STMRNAME, dbo.GATEINDETAIL.IGMNO, 
						  dbo.GATEINDETAIL.GPLNO, dbo.GATEINDETAIL.CONTNRNO, dbo.CONTAINERSIZEMASTER.CONTNRSDESC, dbo.GATEINDETAIL.CONTNRSID, 
						  dbo.TRANSACTIONDETAIL.TRANIDATE, dbo.TRANSACTIONDETAIL.TRANSDATE, dbo.TRANSACTIONDETAIL.TRANEDATE, dbo.GATEOUTDETAIL.GOTIME, 
						  dbo.TRANSACTIONDETAIL.TRANVDATE, dbo.TRANSACTIONDETAIL.TRANDQTY, dbo.TRANSACTIONDETAIL.TRANDWGHT, dbo.GATEINDETAIL.PRDTGID, 
						  dbo.TRANSACTIONDETAIL.TRANDID, dbo.TRANSACTIONDETAIL.TRANOTYPE, dbo.TRANSACTIONDETAIL.TARIFFMID, dbo.BILLENTRYMASTER.DPAIDNO, 
						  dbo.BILLENTRYMASTER.DPAIDAMT, dbo.GATEINDETAIL.GPEAMT, dbo.GATEINDETAIL.GPAAMT, dbo.TRANSACTIONDETAIL.TRANDSAMT, 
						  dbo.TRANSACTIONDETAIL.TRANDHAMT, dbo.TRANSACTIONDETAIL.TRANDEAMT, dbo.TRANSACTIONDETAIL.TRANDFAMT, dbo.TRANSACTIONDETAIL.TRANDAAMT, 
						  dbo.TRANSACTIONDETAIL.TRANDNAMT, dbo.TRANSACTIONDETAIL.RCOL1, dbo.TRANSACTIONDETAIL.RCOL2, dbo.TRANSACTIONDETAIL.RCOL3, 
						  dbo.TRANSACTIONDETAIL.RCOL4, dbo.TRANSACTIONDETAIL.RCOL5, dbo.TRANSACTIONDETAIL.RCOL6, dbo.TRANSACTIONDETAIL.RCOL7, dbo.TRANSACTIONDETAIL.RAMT1, 
						  dbo.TRANSACTIONDETAIL.RAMT2, dbo.TRANSACTIONDETAIL.RAMT3, dbo.TRANSACTIONDETAIL.RAMT4, dbo.TRANSACTIONDETAIL.RAMT5, 
						  dbo.TRANSACTIONDETAIL.RAMT6, dbo.TRANSACTIONDETAIL.RAMT7, dbo.TRANSACTIONDETAIL.RCAMT1, dbo.TRANSACTIONDETAIL.RCAMT2, dbo.TRANSACTIONDETAIL.RCAMT3, 
						  dbo.TRANSACTIONDETAIL.RCAMT4, dbo.TRANSACTIONDETAIL.RCAMT5, dbo.TRANSACTIONDETAIL.RCAMT6, dbo.TRANSACTIONDETAIL.RCAMT7,GPETYPE,GPSTYPE,GPWTYPE,GPSCNTYPE,
						  dbo.TRANSACTIONDETAIL.TRANDRATE,isnull(STATETYPE,0), STRG_HSNCODE, HANDL_HSNCODE, STRG_TAXABLE_AMT, HANDL_TAXABLE_AMT, STRG_CGST_EXPRN, STRG_SGST_EXPRN, STRG_IGST_EXPRN, 
                         STRG_CGST_AMT, STRG_SGST_AMT, STRG_IGST_AMT, HANDL_CGST_EXPRN, HANDL_SGST_EXPRN, HANDL_IGST_EXPRN, HANDL_CGST_AMT, 
                         HANDL_SGST_AMT, HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT

	FROM         dbo.TRANSACTIONMASTER INNER JOIN
						  dbo.TRANSACTIONDETAIL ON dbo.TRANSACTIONMASTER.TRANMID = dbo.TRANSACTIONDETAIL.TRANMID INNER JOIN
						  dbo.BILLENTRYDETAIL ON dbo.TRANSACTIONDETAIL.BILLEDID = dbo.BILLENTRYDETAIL.BILLEDID INNER JOIN
						  dbo.BILLENTRYMASTER ON dbo.BILLENTRYDETAIL.BILLEMID = dbo.BILLENTRYMASTER.BILLEMID INNER JOIN
						  dbo.OPENSHEETDETAIL ON dbo.BILLENTRYDETAIL.BILLEDID = dbo.OPENSHEETDETAIL.BILLEDID INNER JOIN
						  dbo.OPENSHEETMASTER ON dbo.OPENSHEETDETAIL.OSMID = dbo.OPENSHEETMASTER.OSMID INNER JOIN
						  dbo.GATEINDETAIL ON dbo.BILLENTRYDETAIL.GIDID = dbo.GATEINDETAIL.GIDID INNER JOIN
						  dbo.CONTAINERSIZEMASTER ON dbo.GATEINDETAIL.CONTNRSID = dbo.CONTAINERSIZEMASTER.CONTNRSID LEFT OUTER JOIN
						  dbo.GATEOUTDETAIL ON dbo.GATEINDETAIL.GIDID = dbo.GATEOUTDETAIL.GIDID INNER JOIN
                         dbo.CATEGORYMASTER ON dbo.OPENSHEETMASTER.CHAID = dbo.CATEGORYMASTER.CATEID LEFT OUTER JOIN
                         dbo.STATEMASTER ON dbo.CATEGORYMASTER.STATEID = dbo.STATEMASTER.STATEID
	WHERE     (dbo.TRANSACTIONMASTER.TRANMID = @LTRANMID)




SELECT *  FROM @TableMaster order by BILLEDID



return 
       
END


4.


USE [CFS]
GO

/****** Object:  View [dbo].[VW_IMPORT_SLABTYPE_HSN_DETAIL_ASSGN]    Script Date: 02/07/2017 22:58:08 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create VIEW [dbo].[VW_IMPORT_SLABTYPE_HSN_DETAIL_ASSGN]
AS
SELECT        dbo.SLABTYPEMASTER.SLABTID, dbo.HSNCODEMASTER.HSNCODE, dbo.HSNCODEMASTER.CGSTEXPRN, dbo.HSNCODEMASTER.SGSTEXPRN, 
                         dbo.HSNCODEMASTER.IGSTEXPRN, dbo.HSNCODEMASTER.ACGSTEXPRN, dbo.HSNCODEMASTER.ASGSTEXPRN, dbo.HSNCODEMASTER.AIGSTEXPRN
FROM            dbo.SLABTYPEMASTER INNER JOIN
                         dbo.HSNCODEMASTER ON dbo.SLABTYPEMASTER.HSNID = dbo.HSNCODEMASTER.HSNID
GROUP BY dbo.SLABTYPEMASTER.SLABTID, dbo.HSNCODEMASTER.CGSTEXPRN, dbo.HSNCODEMASTER.SGSTEXPRN, dbo.HSNCODEMASTER.IGSTEXPRN, 
                         dbo.HSNCODEMASTER.ACGSTEXPRN, dbo.HSNCODEMASTER.ASGSTEXPRN, dbo.HSNCODEMASTER.AIGSTEXPRN, dbo.HSNCODEMASTER.HSNCODE


GO


5.


USE [CFS]
GO

/****** Object:  View [dbo].[VW_EXPORT_SLABTYPE_HSN_DETAIL_ASSGN]    Script Date: 03/07/2017 02:48:34 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create VIEW [dbo].[VW_EXPORT_SLABTYPE_HSN_DETAIL_ASSGN]
AS
SELECT        dbo.EXPORTSLABTYPEMASTER.SLABTID, dbo.HSNCODEMASTER.HSNCODE, dbo.HSNCODEMASTER.CGSTEXPRN, dbo.HSNCODEMASTER.SGSTEXPRN, 
                         dbo.HSNCODEMASTER.IGSTEXPRN, dbo.HSNCODEMASTER.ACGSTEXPRN, dbo.HSNCODEMASTER.ASGSTEXPRN, dbo.HSNCODEMASTER.AIGSTEXPRN
FROM            dbo.EXPORTSLABTYPEMASTER INNER JOIN
                         dbo.HSNCODEMASTER ON dbo.EXPORTSLABTYPEMASTER.HSNID = dbo.HSNCODEMASTER.HSNID
GROUP BY dbo.EXPORTSLABTYPEMASTER.SLABTID, dbo.HSNCODEMASTER.CGSTEXPRN, dbo.HSNCODEMASTER.SGSTEXPRN, dbo.HSNCODEMASTER.IGSTEXPRN, 
                         dbo.HSNCODEMASTER.ACGSTEXPRN, dbo.HSNCODEMASTER.ASGSTEXPRN, dbo.HSNCODEMASTER.AIGSTEXPRN, dbo.HSNCODEMASTER.HSNCODE


GO


6.


USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Export_Invoice_Stuff_Flx_Assgn]    Script Date: 03/07/2017 17:12:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Export_Invoice_Stuff_Flx_Assgn]  /* CHANGE */
		@PSTFMID int, @PEDATE smalldatetime, @PTRANMID INT
 
AS BEGIN

    DECLARE @TableMaster TABLE
    ( 
	   CONTNRNO  VARCHAR(15)
	  ,CONTNRSDESC VARCHAR(5)
	  ,GIDATE SMALLDATETIME 
	  ,SBDDATE SMALLDATETIME 
	  ,GODATE SMALLDATETIME
	  ,CONTNRSID INT
	  ,STFDID INT 
	  ,GIDID INT
	  ,STFDNOP	NUMERIC(18,2)
	  ,STFDQTY 	NUMERIC(18,2)
	  ,TRANDID INT
	  ,TRANDSAMT NUMERIC(18,2)
	  ,TRANDHAMT NUMERIC(18,2)
	  ,TRANDEAMT NUMERIC(18,2)
	  ,TRANDFAMT NUMERIC(18,2)
	  ,TRANDPAMT NUMERIC(18,2)
	  ,TRANDNAMT NUMERIC(18,2)
	  ,RCOL1  NUMERIC(18,2)
	  ,RCOL2  NUMERIC(18,2)
	  ,RCOL3  NUMERIC(18,2)
	  ,RCOL4  NUMERIC(18,2)
	  ,RCOL5  NUMERIC(18,2)
	  ,RCOL6  NUMERIC(18,2)
	  ,RCOL7  NUMERIC(18,2)
	  ,RAMT1  NUMERIC(18,2)
	  ,RAMT2  NUMERIC(18,2)
	  ,RAMT3  NUMERIC(18,2)
	  ,RAMT4  NUMERIC(18,2)
	  ,RAMT5  NUMERIC(18,2)
	  ,RAMT6  NUMERIC(18,2)
	  ,RAMT7  NUMERIC(18,2)
	  ,RCAMT1  NUMERIC(18,2)
	  ,RCAMT2  NUMERIC(18,2)
	  ,RCAMT3  NUMERIC(18,2)
	  ,RCAMT4  NUMERIC(18,2)
	  ,RCAMT5  NUMERIC(18,2)
	  ,RCAMT6  NUMERIC(18,2)
	  ,RCAMT7  NUMERIC(18,2)
	   , STATETYPE smallint
	   , STRG_HSN_CODE VARCHAR(10)
	   , HANDL_HSN_CODE VARCHAR(10)
	   ,STRG_TAXABLE_AMT  NUMERIC(18,2)
	   ,HANDL_TAXABLE_AMT  NUMERIC(18,2)
	   ,STRG_CGST_EXPRN  NUMERIC(18,2)
	   ,STRG_SGST_EXPRN  NUMERIC(18,2)
	   ,STRG_IGST_EXPRN  NUMERIC(18,2)
	   ,STRG_CGST_AMT  NUMERIC(18,2)
	   ,STRG_SGST_AMT  NUMERIC(18,2)
	   ,STRG_IGST_AMT  NUMERIC(18,2)
	   ,HANDL_CGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_SGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_IGST_EXPRN  NUMERIC(18,2)
	   ,HANDL_CGST_AMT  NUMERIC(18,2)
	   ,HANDL_SGST_AMT  NUMERIC(18,2)
	   ,HANDL_IGST_AMT  NUMERIC(18,2)
	   ,TRANCGSTAMT  NUMERIC(18,2)
	   ,TRANSGSTAMT  NUMERIC(18,2)
	   ,TRANIGSTAMT  NUMERIC(18,2)
    )


DECLARE @LSTFMID int, @LEDATE smalldatetime, @LTRANMID INT
set @LSTFMID =@PSTFMID
set @LEDATE = @PEDATE
set @LTRANMID = @PTRANMID


set nocount on

--PENDING STUFF WISE CONTAINER NO
--isnull(dbo.GATEOUTDETAIL.GODATE,@LEDATE)

INSERT INTO @TableMaster(CONTNRNO,CONTNRSDESC,GIDATE,SBDDATE,GODATE,CONTNRSID,STFDID,GIDID,STFDNOP,STFDQTY,
TRANDID,TRANDSAMT,TRANDHAMT,TRANDEAMT,TRANDFAMT,TRANDPAMT,TRANDNAMT,RCOL1,RCOL2,RCOL3,RCOL4,RCOL5,RCOL6,
RCOL7,RAMT1,RAMT2,RAMT3,RAMT4,RAMT5,RAMT6,RAMT7,RCAMT1,RCAMT2,RCAMT3,RCAMT4,RCAMT5,RCAMT6,RCAMT7, STATETYPE, STRG_HSN_CODE, HANDL_HSN_CODE ,STRG_TAXABLE_AMT,
	HANDL_TAXABLE_AMT,STRG_CGST_EXPRN,STRG_SGST_EXPRN,STRG_IGST_EXPRN,STRG_CGST_AMT,STRG_SGST_AMT,
	STRG_IGST_AMT,HANDL_CGST_EXPRN,HANDL_SGST_EXPRN,HANDL_IGST_EXPRN,HANDL_CGST_AMT,HANDL_SGST_AMT,
	HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT)
    
SELECT     dbo.GATEINDETAIL.CONTNRNO, dbo.CONTAINERSIZEMASTER.CONTNRSDESC, GIDATE, MIN(dbo.SHIPPINGBILLDETAIL.SBDDATE) AS SBDDATE, 
                      @LEDATE, dbo.GATEINDETAIL.CONTNRSID, dbo.STUFFINGDETAIL.STFDID, dbo.GATEINDETAIL.GIDID,
                      0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0, 0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,isnull(STATETYPE,0),
					  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
FROM         dbo.STUFFINGPRODUCTDETAIL INNER JOIN
                      dbo.STUFFINGDETAIL ON dbo.STUFFINGPRODUCTDETAIL.STFDID = dbo.STUFFINGDETAIL.STFDID INNER JOIN
                      dbo.GATEINDETAIL ON dbo.STUFFINGDETAIL.GIDID = dbo.GATEINDETAIL.GIDID INNER JOIN
                      dbo.CONTAINERSIZEMASTER ON dbo.GATEINDETAIL.CONTNRSID = dbo.CONTAINERSIZEMASTER.CONTNRSID INNER JOIN
                      dbo.STUFFINGMASTER ON dbo.STUFFINGDETAIL.STFMID = dbo.STUFFINGMASTER.STFMID INNER JOIN
                      dbo.SHIPPINGBILLDETAIL ON dbo.STUFFINGPRODUCTDETAIL.SBDID = dbo.SHIPPINGBILLDETAIL.SBDID LEFT OUTER JOIN
                      dbo.GATEOUTDETAIL ON dbo.GATEINDETAIL.GIDID = dbo.GATEOUTDETAIL.GIDID LEFT OUTER JOIN
                      dbo.VW_EXPORT_INVOICE_SBILL_NO_CBX_ASSGN_01 ON dbo.STUFFINGDETAIL.STFDID = dbo.VW_EXPORT_INVOICE_SBILL_NO_CBX_ASSGN_01.STFDID INNER JOIN
                         dbo.CATEGORYMASTER ON dbo.STUFFINGMASTER.CHAID = dbo.CATEGORYMASTER.CATEID LEFT OUTER JOIN
                         dbo.STATEMASTER ON dbo.CATEGORYMASTER.STATEID = dbo.STATEMASTER.STATEID
WHERE     (ISNULL(dbo.VW_EXPORT_INVOICE_SBILL_NO_CBX_ASSGN_01.TRANDID, 0) = 0) AND (dbo.STUFFINGDETAIL.STFMID = @LSTFMID)
GROUP BY dbo.STUFFINGDETAIL.STFDID, dbo.GATEINDETAIL.CONTNRNO, dbo.GATEINDETAIL.CONTNRSID, dbo.GATEINDETAIL.GIDID, 
                      dbo.CONTAINERSIZEMASTER.CONTNRSDESC, GIDATE,isnull(STATETYPE,0) --, dbo.GATEOUTDETAIL.GODATE

--ACTUAL STUFF INVOICE DETAIL

INSERT INTO @TableMaster(CONTNRNO,CONTNRSDESC,GIDATE,SBDDATE,GODATE,CONTNRSID,STFDID,GIDID,STFDNOP,STFDQTY,
TRANDID,TRANDSAMT,TRANDHAMT,TRANDEAMT,TRANDFAMT,TRANDPAMT,TRANDNAMT,RCOL1,RCOL2,RCOL3,RCOL4,RCOL5,RCOL6,
RCOL7,RAMT1,RAMT2,RAMT3,RAMT4,RAMT5,RAMT6,RAMT7,RCAMT1,RCAMT2,RCAMT3,RCAMT4,RCAMT5,RCAMT6,RCAMT7, STATETYPE, STRG_HSN_CODE, HANDL_HSN_CODE ,STRG_TAXABLE_AMT,
	HANDL_TAXABLE_AMT,STRG_CGST_EXPRN,STRG_SGST_EXPRN,STRG_IGST_EXPRN,STRG_CGST_AMT,STRG_SGST_AMT,
	STRG_IGST_AMT,HANDL_CGST_EXPRN,HANDL_SGST_EXPRN,HANDL_IGST_EXPRN,HANDL_CGST_AMT,HANDL_SGST_AMT,
	HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT)

SELECT     dbo.TRANSACTIONDETAIL.TRANDREFNO AS CONTNRNO, dbo.CONTAINERSIZEMASTER.CONTNRSDESC, dbo.TRANSACTIONDETAIL.TRANIDATE, 
                      dbo.TRANSACTIONDETAIL.TRANSDATE, dbo.TRANSACTIONDETAIL.TRANEDATE, dbo.GATEINDETAIL.CONTNRSID, dbo.TRANSACTIONDETAIL.STFDID, 
                      dbo.TRANSACTIONDETAIL.TRANDREFID AS GIDID, dbo.TRANSACTIONDETAIL.TRANDNOP AS STFDNOP, dbo.TRANSACTIONDETAIL.TRANDQTY AS STFDQTY, 
                      dbo.TRANSACTIONDETAIL.TRANDID, dbo.TRANSACTIONDETAIL.TRANDSAMT, dbo.TRANSACTIONDETAIL.TRANDHAMT, dbo.TRANSACTIONDETAIL.TRANDEAMT, 
                      dbo.TRANSACTIONDETAIL.TRANDFAMT, dbo.TRANSACTIONDETAIL.TRANDPAMT, dbo.TRANSACTIONDETAIL.TRANDNAMT, dbo.TRANSACTIONDETAIL.RCOL1, 
                      dbo.TRANSACTIONDETAIL.RCOL2, dbo.TRANSACTIONDETAIL.RCOL3, dbo.TRANSACTIONDETAIL.RCOL4, dbo.TRANSACTIONDETAIL.RCOL5, 
                      dbo.TRANSACTIONDETAIL.RCOL6, dbo.TRANSACTIONDETAIL.RCOL7, dbo.TRANSACTIONDETAIL.RAMT1, dbo.TRANSACTIONDETAIL.RAMT2, dbo.TRANSACTIONDETAIL.RAMT3, 
                      dbo.TRANSACTIONDETAIL.RAMT4, dbo.TRANSACTIONDETAIL.RAMT5, dbo.TRANSACTIONDETAIL.RAMT6, dbo.TRANSACTIONDETAIL.RAMT7, dbo.TRANSACTIONDETAIL.RCAMT1, 
                      dbo.TRANSACTIONDETAIL.RCAMT2, dbo.TRANSACTIONDETAIL.RCAMT3, dbo.TRANSACTIONDETAIL.RCAMT4, dbo.TRANSACTIONDETAIL.RCAMT5, 
                      dbo.TRANSACTIONDETAIL.RCAMT6,dbo.TRANSACTIONDETAIL.RCAMT7,isnull(STATETYPE,0), STRG_HSNCODE, HANDL_HSNCODE, STRG_TAXABLE_AMT, HANDL_TAXABLE_AMT, STRG_CGST_EXPRN, STRG_SGST_EXPRN, STRG_IGST_EXPRN, 
                         STRG_CGST_AMT, STRG_SGST_AMT, STRG_IGST_AMT, HANDL_CGST_EXPRN, HANDL_SGST_EXPRN, HANDL_IGST_EXPRN, HANDL_CGST_AMT, 
                         HANDL_SGST_AMT, HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT
FROM         dbo.TRANSACTIONDETAIL INNER JOIN
                      dbo.TRANSACTIONMASTER ON dbo.TRANSACTIONDETAIL.TRANMID = dbo.TRANSACTIONMASTER.TRANMID INNER JOIN
                      dbo.GATEINDETAIL ON dbo.TRANSACTIONDETAIL.TRANDREFID = dbo.GATEINDETAIL.GIDID INNER JOIN
                      dbo.CONTAINERSIZEMASTER ON dbo.GATEINDETAIL.CONTNRSID = dbo.CONTAINERSIZEMASTER.CONTNRSID INNER JOIN
                         dbo.CATEGORYMASTER ON dbo.TRANSACTIONMASTER.TRANREFID = dbo.CATEGORYMASTER.CATEID LEFT OUTER JOIN
                         dbo.STATEMASTER ON dbo.CATEGORYMASTER.STATEID = dbo.STATEMASTER.STATEID
WHERE     (dbo.TRANSACTIONMASTER.SDPTID = 2) AND (dbo.TRANSACTIONDETAIL.TRANMID = @LTRANMID)                                                                  

SELECT CONTNRNO,CONTNRSDESC,GIDATE,SBDDATE,GODATE,CONTNRSID,STFDID,GIDID,STFDNOP,STFDQTY,TRANDID,TRANDSAMT,
TRANDHAMT,TRANDEAMT,TRANDFAMT,TRANDPAMT,TRANDNAMT,RCOL1,RCOL2,RCOL3,RCOL4,RCOL5,RCOL6,RCOL7,RAMT1,RAMT2,
RAMT3,RAMT4,RAMT5,RAMT6,RAMT7,RCAMT1,RCAMT2,RCAMT3,RCAMT4,RCAMT5,RCAMT6,RCAMT7, STATETYPE, STRG_HSN_CODE, HANDL_HSN_CODE ,STRG_TAXABLE_AMT,
	HANDL_TAXABLE_AMT,STRG_CGST_EXPRN,STRG_SGST_EXPRN,STRG_IGST_EXPRN,STRG_CGST_AMT,STRG_SGST_AMT,
	STRG_IGST_AMT,HANDL_CGST_EXPRN,HANDL_SGST_EXPRN,HANDL_IGST_EXPRN,HANDL_CGST_AMT,HANDL_SGST_AMT,
	HANDL_IGST_AMT,TRANCGSTAMT,TRANSGSTAMT,TRANIGSTAMT FROM @TableMaster order by GIDATE, CONTNRNO

return 
       
END



7.


USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_Import_Invoice]    Script Date: 10/07/2017 12:03:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Search_Import_Invoice]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT
		,@PTRANBTYPE int
		,@PREGSTRID int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LTRANBTYPE int,@LREGSTRID int,@LSDate Smalldatetime, @LEDate Smalldatetime
set @LCompyId = @PCompyId
set @LTRANBTYPE=@PTRANBTYPE
set @LREGSTRID=@PREGSTRID
set @LSDate = @PSDate
set @LEDate = @PEDate

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
    , TRANTIME datetime
    , TRANDNO  VARCHAR(15)
    , TRANNO  int
    , TRANREFNAME VARCHAR(100)
	, NOC int
	, TRANNAMT numeric(18,2)
	,DISPSTATUS smallint
	,GSTAMT smallint
	, TRANMID INT
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,DISPSTATUS, GSTAMT,TRANMID, RowNum)
  
    SELECT   TRANDATE, TRANTIME,  
   TRANDNO, TRANNO,isnull(TRANCSNAME, TRANREFNAME),0,TRANNAMT,DISPSTATUS, case when TRANBILLREFNO is null then 0 else 1 end, TRANMID

            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				
			  			  WHEN 2 then TRANDNO
					      WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			  
			  		    WHEN 2 then TRANDNO
					     WHEN 3 then TRANNO
			  			  WHEN 4 then isnull(TRANCSNAME, TRANREFNAME)
						  WHEN 6 then TRANNAMT
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 then TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 then TRANTIME
                END
            END DESC
            
            ) AS RowNum
            
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1) AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
              OR TRANTIME LIKE @FilterTerm
              OR TRANDNO  LIKE @FilterTerm
              OR TRANNO    LIKE @FilterTerm
              oR isnull(TRANCSNAME, TRANREFNAME) LIKE @FilterTerm
              OR TRANNAMT    LIKE @FilterTerm
             )
			   
            
    SELECT TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,
	      case DISPSTATUS when 0 then '' when 1 then 'C' end as DISPSTATUS, GSTAMT, TRANMID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANNO DESC 

SELECT    @TotalRowsCount = COUNT(*)
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=1)

    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END



8.


USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_Export_Stuff_Billing]    Script Date: 10/07/2017 12:44:23 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Search_Export_Stuff_Billing]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT
		,@PTRANBTYPE int
		,@PREGSTRID int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LTRANBTYPE int,@LREGSTRID int,@LSDate Smalldatetime, @LEDate Smalldatetime
set @LCompyId = @PCompyId
set @LTRANBTYPE=@PTRANBTYPE
set @LREGSTRID=@PREGSTRID
set @LSDate = @PSDate
set @LEDate = @PEDate

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
    , TRANTIME datetime
    , TRANDNO  VARCHAR(15)
    , TRANNO  int
    , TRANREFNAME VARCHAR(100)
	, NOC int
	, TRANNAMT numeric(18,2)
	,DISPSTATUS smallint
	,GSTAMT smallint
	, TRANMID INT
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,DISPSTATUS, GSTAMT, TRANMID, RowNum)
  
    SELECT   TRANDATE, TRANTIME,  
   TRANDNO, TRANNO,TRANREFNAME,0, TRANNAMT,DISPSTATUS,case when TRANBILLREFNO is null then 0 else 1 end,TRANMID

            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				
			  			  WHEN 2 then TRANDNO
					      WHEN 3 then TRANNO
			  			  WHEN 4 then TRANREFNAME
						  WHEN 6 then TRANNAMT
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			  
			  		    WHEN 2 then TRANDNO
					     WHEN 3 then TRANNO
			  			  WHEN 4 then TRANREFNAME
						  WHEN 6 then TRANNAMT
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 then TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 then TRANTIME
                END
            END DESC
            
            ) AS RowNum
            
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=2) AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
              OR TRANTIME LIKE @FilterTerm
              OR TRANDNO  LIKE @FilterTerm
              OR TRANNO    LIKE @FilterTerm
              oR TRANREFNAME LIKE @FilterTerm
              OR TRANNAMT    LIKE @FilterTerm
             )
			   
            
    SELECT TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,case DISPSTATUS when 0 then '' when 1 then 'C' end as DISPSTATUS, GSTAMT, TRANMID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANNO DESC 

SELECT    @TotalRowsCount = COUNT(*)
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=2)

    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END



9.


USE [CFS]
GO
/****** Object:  StoredProcedure [dbo].[pr_Search_Export_Seal_Billing]    Script Date: 10/07/2017 13:17:22 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[pr_Search_Export_Seal_Billing]  /* CHANGE */
 @FilterTerm nvarchar(250) = NULL --parameter to search all columns by
        , @SortIndex INT = 1 -- a one based index to indicate which column to order by
        , @SortDirection CHAR(4) = 'ASC' --the direction to sort in, either ASC or DESC
        , @StartRowNum INT = 1 --the first row to return
        , @EndRowNum INT = 10 --the last row to return
        , @TotalRowsCount INT OUTPUT
        , @FilteredRowsCount INT OUTPUT
        , @PCompyId INT
		,@PTRANBTYPE int
		,@PREGSTRID int
        , @PSDate Smalldatetime
        , @PEDate Smalldatetime
 
AS BEGIN

Declare @LCompyId int,@LTRANBTYPE int,@LREGSTRID int,@LSDate Smalldatetime, @LEDate Smalldatetime
set @LCompyId = @PCompyId
set @LTRANBTYPE=@PTRANBTYPE
set @LREGSTRID=@PREGSTRID
set @LSDate = @PSDate
set @LEDate = @PEDate

    --Wrap filter term with % to search for values that contain @FilterTerm
    SET @FilterTerm = '%' + @FilterTerm + '%'


    DECLARE @TableMaster TABLE
    (
      TRANDATE SMALLDATETIME
    , TRANTIME datetime
    , TRANDNO  VARCHAR(15)
    , TRANNO  int
    , TRANREFNAME VARCHAR(100)
	, NOC int
	, TRANNAMT numeric(18,2)
	,DISPSTATUS smallint
	,GSTAMT smallint
	, TRANMID INT
    , RowNum INT
    )
    INSERT INTO @TableMaster(TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,DISPSTATUS, GSTAMT, TRANMID, RowNum)
  
    SELECT   TRANDATE, TRANTIME,  
   TRANDNO, TRANNO,TRANREFNAME,0,TRANNAMT,DISPSTATUS,case when TRANBILLREFNO is null then 0 else 1 end,TRANMID

            , Row_Number() OVER (
            ORDER BY
            
            /*VARCHAR, NVARCHAR, CHAR ORDER BY*/
            
            CASE @SortDirection
                 WHEN 'ASC'  THEN
                      CASE @SortIndex
           				
			  			  WHEN 2 then TRANDNO
					      WHEN 3 then TRANNO
			  			  WHEN 4 then TRANREFNAME
						  WHEN 6 then TRANNAMT
					   END             
				 END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                   CASE @SortIndex
           			  
			  		    WHEN 2 then TRANDNO
					     WHEN 3 then TRANNO
			  			  WHEN 4 then TRANREFNAME
						  WHEN 6 then TRANNAMT
                    END
               END DESC,
            
            CASE @SortDirection
              WHEN 'ASC'  THEN
                   CASE @SortIndex
                     WHEN 0 THEN TRANDATE
					 WHEN 1 then TRANTIME
                   END             
            END ASC,
            CASE @SortDirection
              WHEN 'DESC' THEN 
                CASE @SortIndex
                  WHEN 0 THEN TRANDATE
				  WHEN 1 then TRANTIME
                END
            END DESC
            
            ) AS RowNum
            
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=2) AND (@FilterTerm IS NULL 
             OR TRANDATE LIKE @FilterTerm
              OR TRANTIME LIKE @FilterTerm
              OR TRANDNO  LIKE @FilterTerm
              OR TRANNO    LIKE @FilterTerm
              oR TRANREFNAME LIKE @FilterTerm
              OR TRANNAMT    LIKE @FilterTerm
             )
			   
            
    SELECT TRANDATE, TRANTIME, TRANDNO , TRANNO,TRANREFNAME,NOC,TRANNAMT,case DISPSTATUS when 0 then '' when 1 then 'C' end as DISPSTATUS, GSTAMT, TRANMID
    FROM    @TableMaster
    WHERE   RowNum BETWEEN @StartRowNum AND @EndRowNum
    ORDER BY TRANNO DESC

SELECT    @TotalRowsCount = COUNT(*)
FROM       TRANSACTIONMASTER

WHERE (dbo.TRANSACTIONMASTER.COMPYID = @LCompyId) and (TRANSACTIONMASTER.REGSTRID=@LREGSTRID) and (TRANSACTIONMASTER.TRANBTYPE=@LTRANBTYPE) and
(TRANDATE BETWEEN @LSDate AND @LEDate) AND (TRANSACTIONMASTER.SDPTID=2)

    
    SELECT @FilteredRowsCount = COUNT(*)
    FROM   @TableMaster
        
END

